// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"

// DATE "01/20/2021 15:01:08"

// 
// Device: Altera 5M570ZT100C5 Package TQFP100
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module UART_MAXV_TEST (
	clk,
	RxD,
	TxD,
	GPout,
	GPin,
	SW_USER_1,
	SW_USER_2,
	TR_DIR_1,
	TR_OE_1,
	TR_DIR_2,
	TR_OE_2,
	TR_DIR_3,
	TR_OE_3,
	LED);
input 	clk;
input 	RxD;
output 	TxD;
output 	[7:0] GPout;
input 	[7:0] GPin;
input 	SW_USER_1;
input 	SW_USER_2;
output 	TR_DIR_1;
output 	TR_OE_1;
output 	TR_DIR_2;
output 	TR_OE_2;
output 	TR_DIR_3;
output 	TR_OE_3;
output 	[3:0] LED;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clk~combout ;
wire \~GND~combout ;
wire \TX|Mux0~3_combout ;
wire \TX|Mux2~0_combout ;
wire \TX|Equal0~0_combout ;
wire \TX|tickgen|Acc[0]~43 ;
wire \TX|tickgen|Acc[1]~41 ;
wire \TX|tickgen|Acc[1]~41COUT1_45 ;
wire \TX|tickgen|Acc[2]~39 ;
wire \TX|tickgen|Acc[2]~39COUT1_46 ;
wire \TX|tickgen|Acc[3]~37 ;
wire \TX|tickgen|Acc[3]~37COUT1_47 ;
wire \TX|tickgen|Acc[4]~35 ;
wire \TX|tickgen|Acc[4]~35COUT1_48 ;
wire \TX|tickgen|Acc[5]~33 ;
wire \TX|tickgen|Acc[6]~31 ;
wire \TX|tickgen|Acc[6]~31COUT1_49 ;
wire \TX|tickgen|Acc[7]~29 ;
wire \TX|tickgen|Acc[7]~29COUT1_50 ;
wire \TX|tickgen|Acc[8]~27 ;
wire \TX|tickgen|Acc[8]~27COUT1_51 ;
wire \TX|tickgen|Acc[9]~25 ;
wire \TX|tickgen|Acc[9]~25COUT1_52 ;
wire \TX|tickgen|Acc[10]~23 ;
wire \TX|tickgen|Acc[11]~21 ;
wire \TX|tickgen|Acc[11]~21COUT1_53 ;
wire \TX|tickgen|Acc[12]~19 ;
wire \TX|tickgen|Acc[12]~19COUT1_54 ;
wire \TX|tickgen|Acc[13]~17 ;
wire \TX|tickgen|Acc[13]~17COUT1_55 ;
wire \TX|tickgen|Acc[14]~15 ;
wire \TX|tickgen|Acc[14]~15COUT1_56 ;
wire \TX|tickgen|Acc[15]~13 ;
wire \TX|tickgen|Acc[16]~11 ;
wire \TX|tickgen|Acc[16]~11COUT1_57 ;
wire \TX|tickgen|Acc[17]~9 ;
wire \TX|tickgen|Acc[17]~9COUT1_58 ;
wire \TX|tickgen|Acc[18]~7 ;
wire \TX|tickgen|Acc[18]~7COUT1_59 ;
wire \TX|tickgen|Acc[19]~5 ;
wire \TX|tickgen|Acc[19]~5COUT1_60 ;
wire \TX|tickgen|Acc[20]~3 ;
wire \TX|Mux1~4_combout ;
wire \TX|Mux1~0_combout ;
wire \TX|Mux1~1_combout ;
wire \TX|Mux0~2_combout ;
wire \RxD~combout ;
wire \RX|tickgen|Acc[4]~35 ;
wire \RX|tickgen|Acc[4]~35COUT1_38 ;
wire \RX|tickgen|Acc[5]~33 ;
wire \RX|tickgen|Acc[5]~33COUT1_39 ;
wire \RX|tickgen|Acc[6]~31 ;
wire \RX|tickgen|Acc[6]~31COUT1_40 ;
wire \RX|tickgen|Acc[7]~29 ;
wire \RX|tickgen|Acc[8]~27 ;
wire \RX|tickgen|Acc[8]~27COUT1_41 ;
wire \RX|tickgen|Acc[9]~25 ;
wire \RX|tickgen|Acc[9]~25COUT1_42 ;
wire \RX|tickgen|Acc[10]~23 ;
wire \RX|tickgen|Acc[10]~23COUT1_43 ;
wire \RX|tickgen|Acc[11]~21 ;
wire \RX|tickgen|Acc[11]~21COUT1_44 ;
wire \RX|tickgen|Acc[12]~19 ;
wire \RX|tickgen|Acc[13]~17 ;
wire \RX|tickgen|Acc[13]~17COUT1_45 ;
wire \RX|tickgen|Acc[14]~15 ;
wire \RX|tickgen|Acc[14]~15COUT1_46 ;
wire \RX|tickgen|Acc[15]~13 ;
wire \RX|tickgen|Acc[15]~13COUT1_47 ;
wire \RX|tickgen|Acc[16]~11 ;
wire \RX|tickgen|Acc[16]~11COUT1_48 ;
wire \RX|tickgen|Acc[17]~9 ;
wire \RX|tickgen|Acc[18]~7 ;
wire \RX|tickgen|Acc[18]~7COUT1_49 ;
wire \RX|tickgen|Acc[19]~5 ;
wire \RX|tickgen|Acc[19]~5COUT1_50 ;
wire \RX|tickgen|Acc[20]~3 ;
wire \RX|tickgen|Acc[20]~3COUT1_51 ;
wire \RX|RxD_bit~regout ;
wire \RX|Mux3~0_combout ;
wire \RX|Equal4~0_combout ;
wire \RX|sampleNow~0_combout ;
wire \RX|Mux1~0_combout ;
wire \RX|Mux2~0_combout ;
wire \RX|RxD_data_ready~0_combout ;
wire \RX|RxD_data_ready~regout ;
wire \TX|Mux1~2_combout ;
wire \TX|always0~0_combout ;
wire \TX|always0~1_combout ;
wire \TX|TxD_shift[0]~10_combout ;
wire \TX|TxD~0_combout ;
wire \RX|always4~0_combout ;
wire \GPout[0]~reg0_regout ;
wire \GPout[1]~reg0_regout ;
wire \GPout[2]~reg0_regout ;
wire \GPout[3]~reg0_regout ;
wire \GPout[4]~reg0_regout ;
wire \GPout[5]~reg0_regout ;
wire \GPout[6]~reg0_regout ;
wire \GPout[7]~reg0_regout ;
wire \Add0~100_combout ;
wire \Add0~102 ;
wire \Add0~102COUT1_177 ;
wire \Add0~105_combout ;
wire \Add0~107 ;
wire \Add0~107COUT1_178 ;
wire \Add0~110_combout ;
wire \Add0~5_combout ;
wire \Add0~7 ;
wire \Add0~20_combout ;
wire \Add0~22 ;
wire \Add0~22COUT1_165 ;
wire \Add0~25_combout ;
wire \Add0~0_combout ;
wire \Add0~2 ;
wire \Add0~2COUT1_161 ;
wire \Add0~10_combout ;
wire \Add0~12 ;
wire \Add0~12COUT1_162 ;
wire \Add0~15_combout ;
wire \Add0~17 ;
wire \Add0~17COUT1_163 ;
wire \Add0~30_combout ;
wire \Add0~32 ;
wire \Add0~32COUT1_164 ;
wire \Add0~35_combout ;
wire \Add0~37 ;
wire \Add0~55_combout ;
wire \Add0~27 ;
wire \Add0~27COUT1_166 ;
wire \Add0~45_combout ;
wire \Add0~47 ;
wire \Add0~47COUT1_167 ;
wire \Add0~50_combout ;
wire \Add0~52 ;
wire \Add0~52COUT1_168 ;
wire \Add0~40_combout ;
wire \Add0~42 ;
wire \Add0~57 ;
wire \Add0~57COUT1_169 ;
wire \Add0~60_combout ;
wire \Add0~62 ;
wire \Add0~62COUT1_170 ;
wire \Add0~65_combout ;
wire \Add0~67 ;
wire \Add0~67COUT1_171 ;
wire \Add0~70_combout ;
wire \Add0~72 ;
wire \Add0~72COUT1_172 ;
wire \Add0~75_combout ;
wire \Add0~77 ;
wire \Add0~80_combout ;
wire \Add0~82 ;
wire \Add0~82COUT1_173 ;
wire \Add0~85_combout ;
wire \Add0~87 ;
wire \Add0~87COUT1_174 ;
wire \Add0~90_combout ;
wire \Add0~92 ;
wire \Add0~92COUT1_175 ;
wire \Add0~95_combout ;
wire \Add0~97 ;
wire \Add0~97COUT1_176 ;
wire \Add0~115_combout ;
wire \Add0~117 ;
wire \Add0~112 ;
wire \Add0~112COUT1_179 ;
wire \Add0~120_combout ;
wire \Add0~122 ;
wire \Add0~122COUT1_180 ;
wire \Add0~125_combout ;
wire \Add0~127 ;
wire \Add0~130_combout ;
wire \Add0~132 ;
wire \Add0~132COUT1_181 ;
wire \Add0~135_combout ;
wire \Equal1~8 ;
wire \Add0~137 ;
wire \Add0~137COUT1_182 ;
wire \Add0~140_combout ;
wire \Add0~142 ;
wire \Add0~142COUT1_183 ;
wire \Add0~145_combout ;
wire \Add0~147 ;
wire \Add0~147COUT1_184 ;
wire \Add0~150_combout ;
wire \Add0~152 ;
wire \Add0~155_combout ;
wire \Equal1~9 ;
wire \Equal1~3 ;
wire \Equal1~0 ;
wire \Equal1~1 ;
wire \Equal1~2 ;
wire \Equal1~4_combout ;
wire \Equal1~6 ;
wire \Equal1~5_combout ;
wire \Equal1~7_combout ;
wire \Equal1~10_combout ;
wire \LED[1]~reg0_regout ;
wire \Add1~0_combout ;
wire \LED[2]~reg0_regout ;
wire \LED[3]~reg0_regout ;
wire \LED[3]~0_combout ;
wire \LED[0]~reg0_regout ;
wire [1:0] \RX|RxD_sync ;
wire [7:0] \TX|TxD_shift ;
wire [21:0] \RX|tickgen|Acc ;
wire [3:0] \TX|TxD_state ;
wire [7:0] \GPin~combout ;
wire [7:0] \RX|RxD_data ;
wire [31:0] led_count;
wire [21:0] \TX|tickgen|Acc ;
wire [2:0] \RX|OversamplingCnt ;
wire [3:0] \RX|RxD_state ;
wire [1:0] \RX|Filter_cnt ;


// Location: PIN_12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clk~combout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X5_Y6_N8
maxv_lcell \~GND (
// Equation(s):
// \~GND~combout  = GND

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\~GND~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \~GND .lut_mask = "0000";
defparam \~GND .operation_mode = "normal";
defparam \~GND .output_mode = "comb_only";
defparam \~GND .register_cascade_mode = "off";
defparam \~GND .sum_lutc_input = "datac";
defparam \~GND .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y6_N1
maxv_lcell \TX|Mux0~3 (
// Equation(s):
// \TX|Mux0~3_combout  = (\TX|tickgen|Acc [21] & (\TX|TxD_state [2] & ((\TX|TxD_state [0]) # (!\TX|TxD_state [3]))))

	.clk(gnd),
	.dataa(\TX|tickgen|Acc [21]),
	.datab(\TX|TxD_state [2]),
	.datac(\TX|TxD_state [3]),
	.datad(\TX|TxD_state [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\TX|Mux0~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|Mux0~3 .lut_mask = "8808";
defparam \TX|Mux0~3 .operation_mode = "normal";
defparam \TX|Mux0~3 .output_mode = "comb_only";
defparam \TX|Mux0~3 .register_cascade_mode = "off";
defparam \TX|Mux0~3 .sum_lutc_input = "datac";
defparam \TX|Mux0~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y6_N2
maxv_lcell \TX|TxD_state[3] (
// Equation(s):
// \TX|TxD_state [3] = DFFEAS((\TX|Mux0~3_combout  & (!\TX|TxD_state [1] & ((\TX|TxD_state [3]) # (!\TX|TxD_state [0])))) # (!\TX|Mux0~3_combout  & (((\TX|TxD_state [3])))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\TX|TxD_state [1]),
	.datab(\TX|Mux0~3_combout ),
	.datac(\TX|TxD_state [3]),
	.datad(\TX|TxD_state [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|TxD_state [3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|TxD_state[3] .lut_mask = "7074";
defparam \TX|TxD_state[3] .operation_mode = "normal";
defparam \TX|TxD_state[3] .output_mode = "reg_only";
defparam \TX|TxD_state[3] .register_cascade_mode = "off";
defparam \TX|TxD_state[3] .sum_lutc_input = "datac";
defparam \TX|TxD_state[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N9
maxv_lcell \TX|Mux2~0 (
// Equation(s):
// \TX|Mux2~0_combout  = ((\TX|TxD_state [2] & (\TX|TxD_state [3])) # (!\TX|TxD_state [2] & ((!\TX|TxD_state [0])))) # (!\TX|tickgen|Acc [21])

	.clk(gnd),
	.dataa(\TX|TxD_state [2]),
	.datab(\TX|tickgen|Acc [21]),
	.datac(\TX|TxD_state [3]),
	.datad(\TX|TxD_state [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\TX|Mux2~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|Mux2~0 .lut_mask = "b3f7";
defparam \TX|Mux2~0 .operation_mode = "normal";
defparam \TX|Mux2~0 .output_mode = "comb_only";
defparam \TX|Mux2~0 .register_cascade_mode = "off";
defparam \TX|Mux2~0 .sum_lutc_input = "datac";
defparam \TX|Mux2~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N4
maxv_lcell \TX|TxD_state[1] (
// Equation(s):
// \TX|TxD_state [1] = DFFEAS((\TX|TxD_state [1] & (((\TX|Mux2~0_combout )))) # (!\TX|TxD_state [1] & (\TX|Mux1~0_combout  & (\TX|TxD_state [3]))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\TX|TxD_state [1]),
	.datab(\TX|Mux1~0_combout ),
	.datac(\TX|TxD_state [3]),
	.datad(\TX|Mux2~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|TxD_state [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|TxD_state[1] .lut_mask = "ea40";
defparam \TX|TxD_state[1] .operation_mode = "normal";
defparam \TX|TxD_state[1] .output_mode = "reg_only";
defparam \TX|TxD_state[1] .register_cascade_mode = "off";
defparam \TX|TxD_state[1] .sum_lutc_input = "datac";
defparam \TX|TxD_state[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y6_N3
maxv_lcell \TX|Equal0~0 (
// Equation(s):
// \TX|Equal0~0_combout  = (!\TX|TxD_state [1] & (!\TX|TxD_state [2] & (!\TX|TxD_state [3] & !\TX|TxD_state [0])))

	.clk(gnd),
	.dataa(\TX|TxD_state [1]),
	.datab(\TX|TxD_state [2]),
	.datac(\TX|TxD_state [3]),
	.datad(\TX|TxD_state [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\TX|Equal0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|Equal0~0 .lut_mask = "0001";
defparam \TX|Equal0~0 .operation_mode = "normal";
defparam \TX|Equal0~0 .output_mode = "comb_only";
defparam \TX|Equal0~0 .register_cascade_mode = "off";
defparam \TX|Equal0~0 .sum_lutc_input = "datac";
defparam \TX|Equal0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y6_N4
maxv_lcell \TX|tickgen|Acc[0] (
// Equation(s):
// \TX|tickgen|Acc [0] = DFFEAS((!\TX|tickgen|Acc [0]), GLOBAL(\clk~combout ), VCC, , , VCC, , , \TX|Equal0~0_combout )
// \TX|tickgen|Acc[0]~43  = CARRY((\TX|tickgen|Acc [0]))

	.clk(\clk~combout ),
	.dataa(\TX|tickgen|Acc [0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\TX|Equal0~0_combout ),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|tickgen|Acc [0]),
	.cout(\TX|tickgen|Acc[0]~43 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|tickgen|Acc[0] .lut_mask = "55aa";
defparam \TX|tickgen|Acc[0] .operation_mode = "arithmetic";
defparam \TX|tickgen|Acc[0] .output_mode = "reg_only";
defparam \TX|tickgen|Acc[0] .register_cascade_mode = "off";
defparam \TX|tickgen|Acc[0] .sum_lutc_input = "datac";
defparam \TX|tickgen|Acc[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y6_N5
maxv_lcell \TX|tickgen|Acc[1] (
// Equation(s):
// \TX|tickgen|Acc [1] = DFFEAS(\TX|tickgen|Acc [1] $ ((((\TX|tickgen|Acc[0]~43 )))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , , \TX|Equal0~0_combout )
// \TX|tickgen|Acc[1]~41  = CARRY(((!\TX|tickgen|Acc[0]~43 )) # (!\TX|tickgen|Acc [1]))
// \TX|tickgen|Acc[1]~41COUT1_45  = CARRY(((!\TX|tickgen|Acc[0]~43 )) # (!\TX|tickgen|Acc [1]))

	.clk(\clk~combout ),
	.dataa(\TX|tickgen|Acc [1]),
	.datab(vcc),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\TX|Equal0~0_combout ),
	.ena(vcc),
	.cin(\TX|tickgen|Acc[0]~43 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|tickgen|Acc [1]),
	.cout(),
	.cout0(\TX|tickgen|Acc[1]~41 ),
	.cout1(\TX|tickgen|Acc[1]~41COUT1_45 ));
// synopsys translate_off
defparam \TX|tickgen|Acc[1] .cin_used = "true";
defparam \TX|tickgen|Acc[1] .lut_mask = "5a5f";
defparam \TX|tickgen|Acc[1] .operation_mode = "arithmetic";
defparam \TX|tickgen|Acc[1] .output_mode = "reg_only";
defparam \TX|tickgen|Acc[1] .register_cascade_mode = "off";
defparam \TX|tickgen|Acc[1] .sum_lutc_input = "cin";
defparam \TX|tickgen|Acc[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y6_N6
maxv_lcell \TX|tickgen|Acc[2] (
// Equation(s):
// \TX|tickgen|Acc [2] = DFFEAS(\TX|tickgen|Acc [2] $ ((((!(!\TX|tickgen|Acc[0]~43  & \TX|tickgen|Acc[1]~41 ) # (\TX|tickgen|Acc[0]~43  & \TX|tickgen|Acc[1]~41COUT1_45 ))))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , , \TX|Equal0~0_combout )
// \TX|tickgen|Acc[2]~39  = CARRY((\TX|tickgen|Acc [2] & ((!\TX|tickgen|Acc[1]~41 ))))
// \TX|tickgen|Acc[2]~39COUT1_46  = CARRY((\TX|tickgen|Acc [2] & ((!\TX|tickgen|Acc[1]~41COUT1_45 ))))

	.clk(\clk~combout ),
	.dataa(\TX|tickgen|Acc [2]),
	.datab(vcc),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\TX|Equal0~0_combout ),
	.ena(vcc),
	.cin(\TX|tickgen|Acc[0]~43 ),
	.cin0(\TX|tickgen|Acc[1]~41 ),
	.cin1(\TX|tickgen|Acc[1]~41COUT1_45 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|tickgen|Acc [2]),
	.cout(),
	.cout0(\TX|tickgen|Acc[2]~39 ),
	.cout1(\TX|tickgen|Acc[2]~39COUT1_46 ));
// synopsys translate_off
defparam \TX|tickgen|Acc[2] .cin0_used = "true";
defparam \TX|tickgen|Acc[2] .cin1_used = "true";
defparam \TX|tickgen|Acc[2] .cin_used = "true";
defparam \TX|tickgen|Acc[2] .lut_mask = "a50a";
defparam \TX|tickgen|Acc[2] .operation_mode = "arithmetic";
defparam \TX|tickgen|Acc[2] .output_mode = "reg_only";
defparam \TX|tickgen|Acc[2] .register_cascade_mode = "off";
defparam \TX|tickgen|Acc[2] .sum_lutc_input = "cin";
defparam \TX|tickgen|Acc[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y6_N7
maxv_lcell \TX|tickgen|Acc[3] (
// Equation(s):
// \TX|tickgen|Acc [3] = DFFEAS((\TX|tickgen|Acc [3] $ (((!\TX|tickgen|Acc[0]~43  & \TX|tickgen|Acc[2]~39 ) # (\TX|tickgen|Acc[0]~43  & \TX|tickgen|Acc[2]~39COUT1_46 )))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , , \TX|Equal0~0_combout )
// \TX|tickgen|Acc[3]~37  = CARRY(((!\TX|tickgen|Acc[2]~39 ) # (!\TX|tickgen|Acc [3])))
// \TX|tickgen|Acc[3]~37COUT1_47  = CARRY(((!\TX|tickgen|Acc[2]~39COUT1_46 ) # (!\TX|tickgen|Acc [3])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\TX|tickgen|Acc [3]),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\TX|Equal0~0_combout ),
	.ena(vcc),
	.cin(\TX|tickgen|Acc[0]~43 ),
	.cin0(\TX|tickgen|Acc[2]~39 ),
	.cin1(\TX|tickgen|Acc[2]~39COUT1_46 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|tickgen|Acc [3]),
	.cout(),
	.cout0(\TX|tickgen|Acc[3]~37 ),
	.cout1(\TX|tickgen|Acc[3]~37COUT1_47 ));
// synopsys translate_off
defparam \TX|tickgen|Acc[3] .cin0_used = "true";
defparam \TX|tickgen|Acc[3] .cin1_used = "true";
defparam \TX|tickgen|Acc[3] .cin_used = "true";
defparam \TX|tickgen|Acc[3] .lut_mask = "3c3f";
defparam \TX|tickgen|Acc[3] .operation_mode = "arithmetic";
defparam \TX|tickgen|Acc[3] .output_mode = "reg_only";
defparam \TX|tickgen|Acc[3] .register_cascade_mode = "off";
defparam \TX|tickgen|Acc[3] .sum_lutc_input = "cin";
defparam \TX|tickgen|Acc[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y6_N8
maxv_lcell \TX|tickgen|Acc[4] (
// Equation(s):
// \TX|tickgen|Acc [4] = DFFEAS(\TX|tickgen|Acc [4] $ (((((!\TX|tickgen|Acc[0]~43  & \TX|tickgen|Acc[3]~37 ) # (\TX|tickgen|Acc[0]~43  & \TX|tickgen|Acc[3]~37COUT1_47 ))))), GLOBAL(\clk~combout ), VCC, , , VCC, , , \TX|Equal0~0_combout )
// \TX|tickgen|Acc[4]~35  = CARRY((\TX|tickgen|Acc [4]) # ((!\TX|tickgen|Acc[3]~37 )))
// \TX|tickgen|Acc[4]~35COUT1_48  = CARRY((\TX|tickgen|Acc [4]) # ((!\TX|tickgen|Acc[3]~37COUT1_47 )))

	.clk(\clk~combout ),
	.dataa(\TX|tickgen|Acc [4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\TX|Equal0~0_combout ),
	.ena(vcc),
	.cin(\TX|tickgen|Acc[0]~43 ),
	.cin0(\TX|tickgen|Acc[3]~37 ),
	.cin1(\TX|tickgen|Acc[3]~37COUT1_47 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|tickgen|Acc [4]),
	.cout(),
	.cout0(\TX|tickgen|Acc[4]~35 ),
	.cout1(\TX|tickgen|Acc[4]~35COUT1_48 ));
// synopsys translate_off
defparam \TX|tickgen|Acc[4] .cin0_used = "true";
defparam \TX|tickgen|Acc[4] .cin1_used = "true";
defparam \TX|tickgen|Acc[4] .cin_used = "true";
defparam \TX|tickgen|Acc[4] .lut_mask = "5aaf";
defparam \TX|tickgen|Acc[4] .operation_mode = "arithmetic";
defparam \TX|tickgen|Acc[4] .output_mode = "reg_only";
defparam \TX|tickgen|Acc[4] .register_cascade_mode = "off";
defparam \TX|tickgen|Acc[4] .sum_lutc_input = "cin";
defparam \TX|tickgen|Acc[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y6_N9
maxv_lcell \TX|tickgen|Acc[5] (
// Equation(s):
// \TX|tickgen|Acc [5] = DFFEAS((\TX|tickgen|Acc [5] $ ((!(!\TX|tickgen|Acc[0]~43  & \TX|tickgen|Acc[4]~35 ) # (\TX|tickgen|Acc[0]~43  & \TX|tickgen|Acc[4]~35COUT1_48 )))), GLOBAL(\clk~combout ), VCC, , , VCC, , , \TX|Equal0~0_combout )
// \TX|tickgen|Acc[5]~33  = CARRY(((!\TX|tickgen|Acc [5] & !\TX|tickgen|Acc[4]~35COUT1_48 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\TX|tickgen|Acc [5]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\TX|Equal0~0_combout ),
	.ena(vcc),
	.cin(\TX|tickgen|Acc[0]~43 ),
	.cin0(\TX|tickgen|Acc[4]~35 ),
	.cin1(\TX|tickgen|Acc[4]~35COUT1_48 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|tickgen|Acc [5]),
	.cout(\TX|tickgen|Acc[5]~33 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|tickgen|Acc[5] .cin0_used = "true";
defparam \TX|tickgen|Acc[5] .cin1_used = "true";
defparam \TX|tickgen|Acc[5] .cin_used = "true";
defparam \TX|tickgen|Acc[5] .lut_mask = "c303";
defparam \TX|tickgen|Acc[5] .operation_mode = "arithmetic";
defparam \TX|tickgen|Acc[5] .output_mode = "reg_only";
defparam \TX|tickgen|Acc[5] .register_cascade_mode = "off";
defparam \TX|tickgen|Acc[5] .sum_lutc_input = "cin";
defparam \TX|tickgen|Acc[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y6_N0
maxv_lcell \TX|tickgen|Acc[6] (
// Equation(s):
// \TX|tickgen|Acc [6] = DFFEAS((\TX|tickgen|Acc [6] $ ((!\TX|tickgen|Acc[5]~33 ))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , , \TX|Equal0~0_combout )
// \TX|tickgen|Acc[6]~31  = CARRY(((\TX|tickgen|Acc [6] & !\TX|tickgen|Acc[5]~33 )))
// \TX|tickgen|Acc[6]~31COUT1_49  = CARRY(((\TX|tickgen|Acc [6] & !\TX|tickgen|Acc[5]~33 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\TX|tickgen|Acc [6]),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\TX|Equal0~0_combout ),
	.ena(vcc),
	.cin(\TX|tickgen|Acc[5]~33 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|tickgen|Acc [6]),
	.cout(),
	.cout0(\TX|tickgen|Acc[6]~31 ),
	.cout1(\TX|tickgen|Acc[6]~31COUT1_49 ));
// synopsys translate_off
defparam \TX|tickgen|Acc[6] .cin_used = "true";
defparam \TX|tickgen|Acc[6] .lut_mask = "c30c";
defparam \TX|tickgen|Acc[6] .operation_mode = "arithmetic";
defparam \TX|tickgen|Acc[6] .output_mode = "reg_only";
defparam \TX|tickgen|Acc[6] .register_cascade_mode = "off";
defparam \TX|tickgen|Acc[6] .sum_lutc_input = "cin";
defparam \TX|tickgen|Acc[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y6_N1
maxv_lcell \TX|tickgen|Acc[7] (
// Equation(s):
// \TX|tickgen|Acc [7] = DFFEAS((\TX|tickgen|Acc [7] $ (((!\TX|tickgen|Acc[5]~33  & \TX|tickgen|Acc[6]~31 ) # (\TX|tickgen|Acc[5]~33  & \TX|tickgen|Acc[6]~31COUT1_49 )))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , , \TX|Equal0~0_combout )
// \TX|tickgen|Acc[7]~29  = CARRY(((!\TX|tickgen|Acc[6]~31 ) # (!\TX|tickgen|Acc [7])))
// \TX|tickgen|Acc[7]~29COUT1_50  = CARRY(((!\TX|tickgen|Acc[6]~31COUT1_49 ) # (!\TX|tickgen|Acc [7])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\TX|tickgen|Acc [7]),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\TX|Equal0~0_combout ),
	.ena(vcc),
	.cin(\TX|tickgen|Acc[5]~33 ),
	.cin0(\TX|tickgen|Acc[6]~31 ),
	.cin1(\TX|tickgen|Acc[6]~31COUT1_49 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|tickgen|Acc [7]),
	.cout(),
	.cout0(\TX|tickgen|Acc[7]~29 ),
	.cout1(\TX|tickgen|Acc[7]~29COUT1_50 ));
// synopsys translate_off
defparam \TX|tickgen|Acc[7] .cin0_used = "true";
defparam \TX|tickgen|Acc[7] .cin1_used = "true";
defparam \TX|tickgen|Acc[7] .cin_used = "true";
defparam \TX|tickgen|Acc[7] .lut_mask = "3c3f";
defparam \TX|tickgen|Acc[7] .operation_mode = "arithmetic";
defparam \TX|tickgen|Acc[7] .output_mode = "reg_only";
defparam \TX|tickgen|Acc[7] .register_cascade_mode = "off";
defparam \TX|tickgen|Acc[7] .sum_lutc_input = "cin";
defparam \TX|tickgen|Acc[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y6_N2
maxv_lcell \TX|tickgen|Acc[8] (
// Equation(s):
// \TX|tickgen|Acc [8] = DFFEAS((\TX|tickgen|Acc [8] $ (((!\TX|tickgen|Acc[5]~33  & \TX|tickgen|Acc[7]~29 ) # (\TX|tickgen|Acc[5]~33  & \TX|tickgen|Acc[7]~29COUT1_50 )))), GLOBAL(\clk~combout ), VCC, , , VCC, , , \TX|Equal0~0_combout )
// \TX|tickgen|Acc[8]~27  = CARRY(((\TX|tickgen|Acc [8]) # (!\TX|tickgen|Acc[7]~29 )))
// \TX|tickgen|Acc[8]~27COUT1_51  = CARRY(((\TX|tickgen|Acc [8]) # (!\TX|tickgen|Acc[7]~29COUT1_50 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\TX|tickgen|Acc [8]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\TX|Equal0~0_combout ),
	.ena(vcc),
	.cin(\TX|tickgen|Acc[5]~33 ),
	.cin0(\TX|tickgen|Acc[7]~29 ),
	.cin1(\TX|tickgen|Acc[7]~29COUT1_50 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|tickgen|Acc [8]),
	.cout(),
	.cout0(\TX|tickgen|Acc[8]~27 ),
	.cout1(\TX|tickgen|Acc[8]~27COUT1_51 ));
// synopsys translate_off
defparam \TX|tickgen|Acc[8] .cin0_used = "true";
defparam \TX|tickgen|Acc[8] .cin1_used = "true";
defparam \TX|tickgen|Acc[8] .cin_used = "true";
defparam \TX|tickgen|Acc[8] .lut_mask = "3ccf";
defparam \TX|tickgen|Acc[8] .operation_mode = "arithmetic";
defparam \TX|tickgen|Acc[8] .output_mode = "reg_only";
defparam \TX|tickgen|Acc[8] .register_cascade_mode = "off";
defparam \TX|tickgen|Acc[8] .sum_lutc_input = "cin";
defparam \TX|tickgen|Acc[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y6_N3
maxv_lcell \TX|tickgen|Acc[9] (
// Equation(s):
// \TX|tickgen|Acc [9] = DFFEAS(\TX|tickgen|Acc [9] $ (((((!\TX|tickgen|Acc[5]~33  & \TX|tickgen|Acc[8]~27 ) # (\TX|tickgen|Acc[5]~33  & \TX|tickgen|Acc[8]~27COUT1_51 ))))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , , \TX|Equal0~0_combout )
// \TX|tickgen|Acc[9]~25  = CARRY(((!\TX|tickgen|Acc[8]~27 )) # (!\TX|tickgen|Acc [9]))
// \TX|tickgen|Acc[9]~25COUT1_52  = CARRY(((!\TX|tickgen|Acc[8]~27COUT1_51 )) # (!\TX|tickgen|Acc [9]))

	.clk(\clk~combout ),
	.dataa(\TX|tickgen|Acc [9]),
	.datab(vcc),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\TX|Equal0~0_combout ),
	.ena(vcc),
	.cin(\TX|tickgen|Acc[5]~33 ),
	.cin0(\TX|tickgen|Acc[8]~27 ),
	.cin1(\TX|tickgen|Acc[8]~27COUT1_51 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|tickgen|Acc [9]),
	.cout(),
	.cout0(\TX|tickgen|Acc[9]~25 ),
	.cout1(\TX|tickgen|Acc[9]~25COUT1_52 ));
// synopsys translate_off
defparam \TX|tickgen|Acc[9] .cin0_used = "true";
defparam \TX|tickgen|Acc[9] .cin1_used = "true";
defparam \TX|tickgen|Acc[9] .cin_used = "true";
defparam \TX|tickgen|Acc[9] .lut_mask = "5a5f";
defparam \TX|tickgen|Acc[9] .operation_mode = "arithmetic";
defparam \TX|tickgen|Acc[9] .output_mode = "reg_only";
defparam \TX|tickgen|Acc[9] .register_cascade_mode = "off";
defparam \TX|tickgen|Acc[9] .sum_lutc_input = "cin";
defparam \TX|tickgen|Acc[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y6_N4
maxv_lcell \TX|tickgen|Acc[10] (
// Equation(s):
// \TX|tickgen|Acc [10] = DFFEAS(\TX|tickgen|Acc [10] $ ((((!(!\TX|tickgen|Acc[5]~33  & \TX|tickgen|Acc[9]~25 ) # (\TX|tickgen|Acc[5]~33  & \TX|tickgen|Acc[9]~25COUT1_52 ))))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , , \TX|Equal0~0_combout )
// \TX|tickgen|Acc[10]~23  = CARRY((\TX|tickgen|Acc [10] & ((!\TX|tickgen|Acc[9]~25COUT1_52 ))))

	.clk(\clk~combout ),
	.dataa(\TX|tickgen|Acc [10]),
	.datab(vcc),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\TX|Equal0~0_combout ),
	.ena(vcc),
	.cin(\TX|tickgen|Acc[5]~33 ),
	.cin0(\TX|tickgen|Acc[9]~25 ),
	.cin1(\TX|tickgen|Acc[9]~25COUT1_52 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|tickgen|Acc [10]),
	.cout(\TX|tickgen|Acc[10]~23 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|tickgen|Acc[10] .cin0_used = "true";
defparam \TX|tickgen|Acc[10] .cin1_used = "true";
defparam \TX|tickgen|Acc[10] .cin_used = "true";
defparam \TX|tickgen|Acc[10] .lut_mask = "a50a";
defparam \TX|tickgen|Acc[10] .operation_mode = "arithmetic";
defparam \TX|tickgen|Acc[10] .output_mode = "reg_only";
defparam \TX|tickgen|Acc[10] .register_cascade_mode = "off";
defparam \TX|tickgen|Acc[10] .sum_lutc_input = "cin";
defparam \TX|tickgen|Acc[10] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y6_N5
maxv_lcell \TX|tickgen|Acc[11] (
// Equation(s):
// \TX|tickgen|Acc [11] = DFFEAS(\TX|tickgen|Acc [11] $ ((((\TX|tickgen|Acc[10]~23 )))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , , \TX|Equal0~0_combout )
// \TX|tickgen|Acc[11]~21  = CARRY(((!\TX|tickgen|Acc[10]~23 )) # (!\TX|tickgen|Acc [11]))
// \TX|tickgen|Acc[11]~21COUT1_53  = CARRY(((!\TX|tickgen|Acc[10]~23 )) # (!\TX|tickgen|Acc [11]))

	.clk(\clk~combout ),
	.dataa(\TX|tickgen|Acc [11]),
	.datab(vcc),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\TX|Equal0~0_combout ),
	.ena(vcc),
	.cin(\TX|tickgen|Acc[10]~23 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|tickgen|Acc [11]),
	.cout(),
	.cout0(\TX|tickgen|Acc[11]~21 ),
	.cout1(\TX|tickgen|Acc[11]~21COUT1_53 ));
// synopsys translate_off
defparam \TX|tickgen|Acc[11] .cin_used = "true";
defparam \TX|tickgen|Acc[11] .lut_mask = "5a5f";
defparam \TX|tickgen|Acc[11] .operation_mode = "arithmetic";
defparam \TX|tickgen|Acc[11] .output_mode = "reg_only";
defparam \TX|tickgen|Acc[11] .register_cascade_mode = "off";
defparam \TX|tickgen|Acc[11] .sum_lutc_input = "cin";
defparam \TX|tickgen|Acc[11] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y6_N6
maxv_lcell \TX|tickgen|Acc[12] (
// Equation(s):
// \TX|tickgen|Acc [12] = DFFEAS(\TX|tickgen|Acc [12] $ ((((!(!\TX|tickgen|Acc[10]~23  & \TX|tickgen|Acc[11]~21 ) # (\TX|tickgen|Acc[10]~23  & \TX|tickgen|Acc[11]~21COUT1_53 ))))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , , \TX|Equal0~0_combout )
// \TX|tickgen|Acc[12]~19  = CARRY((\TX|tickgen|Acc [12] & ((!\TX|tickgen|Acc[11]~21 ))))
// \TX|tickgen|Acc[12]~19COUT1_54  = CARRY((\TX|tickgen|Acc [12] & ((!\TX|tickgen|Acc[11]~21COUT1_53 ))))

	.clk(\clk~combout ),
	.dataa(\TX|tickgen|Acc [12]),
	.datab(vcc),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\TX|Equal0~0_combout ),
	.ena(vcc),
	.cin(\TX|tickgen|Acc[10]~23 ),
	.cin0(\TX|tickgen|Acc[11]~21 ),
	.cin1(\TX|tickgen|Acc[11]~21COUT1_53 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|tickgen|Acc [12]),
	.cout(),
	.cout0(\TX|tickgen|Acc[12]~19 ),
	.cout1(\TX|tickgen|Acc[12]~19COUT1_54 ));
// synopsys translate_off
defparam \TX|tickgen|Acc[12] .cin0_used = "true";
defparam \TX|tickgen|Acc[12] .cin1_used = "true";
defparam \TX|tickgen|Acc[12] .cin_used = "true";
defparam \TX|tickgen|Acc[12] .lut_mask = "a50a";
defparam \TX|tickgen|Acc[12] .operation_mode = "arithmetic";
defparam \TX|tickgen|Acc[12] .output_mode = "reg_only";
defparam \TX|tickgen|Acc[12] .register_cascade_mode = "off";
defparam \TX|tickgen|Acc[12] .sum_lutc_input = "cin";
defparam \TX|tickgen|Acc[12] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y6_N7
maxv_lcell \TX|tickgen|Acc[13] (
// Equation(s):
// \TX|tickgen|Acc [13] = DFFEAS((\TX|tickgen|Acc [13] $ (((!\TX|tickgen|Acc[10]~23  & \TX|tickgen|Acc[12]~19 ) # (\TX|tickgen|Acc[10]~23  & \TX|tickgen|Acc[12]~19COUT1_54 )))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , , \TX|Equal0~0_combout )
// \TX|tickgen|Acc[13]~17  = CARRY(((!\TX|tickgen|Acc[12]~19 ) # (!\TX|tickgen|Acc [13])))
// \TX|tickgen|Acc[13]~17COUT1_55  = CARRY(((!\TX|tickgen|Acc[12]~19COUT1_54 ) # (!\TX|tickgen|Acc [13])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\TX|tickgen|Acc [13]),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\TX|Equal0~0_combout ),
	.ena(vcc),
	.cin(\TX|tickgen|Acc[10]~23 ),
	.cin0(\TX|tickgen|Acc[12]~19 ),
	.cin1(\TX|tickgen|Acc[12]~19COUT1_54 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|tickgen|Acc [13]),
	.cout(),
	.cout0(\TX|tickgen|Acc[13]~17 ),
	.cout1(\TX|tickgen|Acc[13]~17COUT1_55 ));
// synopsys translate_off
defparam \TX|tickgen|Acc[13] .cin0_used = "true";
defparam \TX|tickgen|Acc[13] .cin1_used = "true";
defparam \TX|tickgen|Acc[13] .cin_used = "true";
defparam \TX|tickgen|Acc[13] .lut_mask = "3c3f";
defparam \TX|tickgen|Acc[13] .operation_mode = "arithmetic";
defparam \TX|tickgen|Acc[13] .output_mode = "reg_only";
defparam \TX|tickgen|Acc[13] .register_cascade_mode = "off";
defparam \TX|tickgen|Acc[13] .sum_lutc_input = "cin";
defparam \TX|tickgen|Acc[13] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y6_N8
maxv_lcell \TX|tickgen|Acc[14] (
// Equation(s):
// \TX|tickgen|Acc [14] = DFFEAS(\TX|tickgen|Acc [14] $ ((((!(!\TX|tickgen|Acc[10]~23  & \TX|tickgen|Acc[13]~17 ) # (\TX|tickgen|Acc[10]~23  & \TX|tickgen|Acc[13]~17COUT1_55 ))))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , , \TX|Equal0~0_combout )
// \TX|tickgen|Acc[14]~15  = CARRY((\TX|tickgen|Acc [14] & ((!\TX|tickgen|Acc[13]~17 ))))
// \TX|tickgen|Acc[14]~15COUT1_56  = CARRY((\TX|tickgen|Acc [14] & ((!\TX|tickgen|Acc[13]~17COUT1_55 ))))

	.clk(\clk~combout ),
	.dataa(\TX|tickgen|Acc [14]),
	.datab(vcc),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\TX|Equal0~0_combout ),
	.ena(vcc),
	.cin(\TX|tickgen|Acc[10]~23 ),
	.cin0(\TX|tickgen|Acc[13]~17 ),
	.cin1(\TX|tickgen|Acc[13]~17COUT1_55 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|tickgen|Acc [14]),
	.cout(),
	.cout0(\TX|tickgen|Acc[14]~15 ),
	.cout1(\TX|tickgen|Acc[14]~15COUT1_56 ));
// synopsys translate_off
defparam \TX|tickgen|Acc[14] .cin0_used = "true";
defparam \TX|tickgen|Acc[14] .cin1_used = "true";
defparam \TX|tickgen|Acc[14] .cin_used = "true";
defparam \TX|tickgen|Acc[14] .lut_mask = "a50a";
defparam \TX|tickgen|Acc[14] .operation_mode = "arithmetic";
defparam \TX|tickgen|Acc[14] .output_mode = "reg_only";
defparam \TX|tickgen|Acc[14] .register_cascade_mode = "off";
defparam \TX|tickgen|Acc[14] .sum_lutc_input = "cin";
defparam \TX|tickgen|Acc[14] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y6_N9
maxv_lcell \TX|tickgen|Acc[15] (
// Equation(s):
// \TX|tickgen|Acc [15] = DFFEAS((\TX|tickgen|Acc [15] $ (((!\TX|tickgen|Acc[10]~23  & \TX|tickgen|Acc[14]~15 ) # (\TX|tickgen|Acc[10]~23  & \TX|tickgen|Acc[14]~15COUT1_56 )))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , , \TX|Equal0~0_combout )
// \TX|tickgen|Acc[15]~13  = CARRY(((!\TX|tickgen|Acc[14]~15COUT1_56 ) # (!\TX|tickgen|Acc [15])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\TX|tickgen|Acc [15]),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\TX|Equal0~0_combout ),
	.ena(vcc),
	.cin(\TX|tickgen|Acc[10]~23 ),
	.cin0(\TX|tickgen|Acc[14]~15 ),
	.cin1(\TX|tickgen|Acc[14]~15COUT1_56 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|tickgen|Acc [15]),
	.cout(\TX|tickgen|Acc[15]~13 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|tickgen|Acc[15] .cin0_used = "true";
defparam \TX|tickgen|Acc[15] .cin1_used = "true";
defparam \TX|tickgen|Acc[15] .cin_used = "true";
defparam \TX|tickgen|Acc[15] .lut_mask = "3c3f";
defparam \TX|tickgen|Acc[15] .operation_mode = "arithmetic";
defparam \TX|tickgen|Acc[15] .output_mode = "reg_only";
defparam \TX|tickgen|Acc[15] .register_cascade_mode = "off";
defparam \TX|tickgen|Acc[15] .sum_lutc_input = "cin";
defparam \TX|tickgen|Acc[15] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y6_N0
maxv_lcell \TX|tickgen|Acc[16] (
// Equation(s):
// \TX|tickgen|Acc [16] = DFFEAS((\TX|tickgen|Acc [16] $ ((!\TX|tickgen|Acc[15]~13 ))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , , \TX|Equal0~0_combout )
// \TX|tickgen|Acc[16]~11  = CARRY(((\TX|tickgen|Acc [16] & !\TX|tickgen|Acc[15]~13 )))
// \TX|tickgen|Acc[16]~11COUT1_57  = CARRY(((\TX|tickgen|Acc [16] & !\TX|tickgen|Acc[15]~13 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\TX|tickgen|Acc [16]),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\TX|Equal0~0_combout ),
	.ena(vcc),
	.cin(\TX|tickgen|Acc[15]~13 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|tickgen|Acc [16]),
	.cout(),
	.cout0(\TX|tickgen|Acc[16]~11 ),
	.cout1(\TX|tickgen|Acc[16]~11COUT1_57 ));
// synopsys translate_off
defparam \TX|tickgen|Acc[16] .cin_used = "true";
defparam \TX|tickgen|Acc[16] .lut_mask = "c30c";
defparam \TX|tickgen|Acc[16] .operation_mode = "arithmetic";
defparam \TX|tickgen|Acc[16] .output_mode = "reg_only";
defparam \TX|tickgen|Acc[16] .register_cascade_mode = "off";
defparam \TX|tickgen|Acc[16] .sum_lutc_input = "cin";
defparam \TX|tickgen|Acc[16] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y6_N1
maxv_lcell \TX|tickgen|Acc[17] (
// Equation(s):
// \TX|tickgen|Acc [17] = DFFEAS((\TX|tickgen|Acc [17] $ (((!\TX|tickgen|Acc[15]~13  & \TX|tickgen|Acc[16]~11 ) # (\TX|tickgen|Acc[15]~13  & \TX|tickgen|Acc[16]~11COUT1_57 )))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , , \TX|Equal0~0_combout )
// \TX|tickgen|Acc[17]~9  = CARRY(((!\TX|tickgen|Acc[16]~11 ) # (!\TX|tickgen|Acc [17])))
// \TX|tickgen|Acc[17]~9COUT1_58  = CARRY(((!\TX|tickgen|Acc[16]~11COUT1_57 ) # (!\TX|tickgen|Acc [17])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\TX|tickgen|Acc [17]),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\TX|Equal0~0_combout ),
	.ena(vcc),
	.cin(\TX|tickgen|Acc[15]~13 ),
	.cin0(\TX|tickgen|Acc[16]~11 ),
	.cin1(\TX|tickgen|Acc[16]~11COUT1_57 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|tickgen|Acc [17]),
	.cout(),
	.cout0(\TX|tickgen|Acc[17]~9 ),
	.cout1(\TX|tickgen|Acc[17]~9COUT1_58 ));
// synopsys translate_off
defparam \TX|tickgen|Acc[17] .cin0_used = "true";
defparam \TX|tickgen|Acc[17] .cin1_used = "true";
defparam \TX|tickgen|Acc[17] .cin_used = "true";
defparam \TX|tickgen|Acc[17] .lut_mask = "3c3f";
defparam \TX|tickgen|Acc[17] .operation_mode = "arithmetic";
defparam \TX|tickgen|Acc[17] .output_mode = "reg_only";
defparam \TX|tickgen|Acc[17] .register_cascade_mode = "off";
defparam \TX|tickgen|Acc[17] .sum_lutc_input = "cin";
defparam \TX|tickgen|Acc[17] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y6_N2
maxv_lcell \TX|tickgen|Acc[18] (
// Equation(s):
// \TX|tickgen|Acc [18] = DFFEAS((\TX|tickgen|Acc [18] $ ((!(!\TX|tickgen|Acc[15]~13  & \TX|tickgen|Acc[17]~9 ) # (\TX|tickgen|Acc[15]~13  & \TX|tickgen|Acc[17]~9COUT1_58 )))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , , \TX|Equal0~0_combout )
// \TX|tickgen|Acc[18]~7  = CARRY(((\TX|tickgen|Acc [18] & !\TX|tickgen|Acc[17]~9 )))
// \TX|tickgen|Acc[18]~7COUT1_59  = CARRY(((\TX|tickgen|Acc [18] & !\TX|tickgen|Acc[17]~9COUT1_58 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\TX|tickgen|Acc [18]),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\TX|Equal0~0_combout ),
	.ena(vcc),
	.cin(\TX|tickgen|Acc[15]~13 ),
	.cin0(\TX|tickgen|Acc[17]~9 ),
	.cin1(\TX|tickgen|Acc[17]~9COUT1_58 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|tickgen|Acc [18]),
	.cout(),
	.cout0(\TX|tickgen|Acc[18]~7 ),
	.cout1(\TX|tickgen|Acc[18]~7COUT1_59 ));
// synopsys translate_off
defparam \TX|tickgen|Acc[18] .cin0_used = "true";
defparam \TX|tickgen|Acc[18] .cin1_used = "true";
defparam \TX|tickgen|Acc[18] .cin_used = "true";
defparam \TX|tickgen|Acc[18] .lut_mask = "c30c";
defparam \TX|tickgen|Acc[18] .operation_mode = "arithmetic";
defparam \TX|tickgen|Acc[18] .output_mode = "reg_only";
defparam \TX|tickgen|Acc[18] .register_cascade_mode = "off";
defparam \TX|tickgen|Acc[18] .sum_lutc_input = "cin";
defparam \TX|tickgen|Acc[18] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y6_N3
maxv_lcell \TX|tickgen|Acc[19] (
// Equation(s):
// \TX|tickgen|Acc [19] = DFFEAS(\TX|tickgen|Acc [19] $ (((((!\TX|tickgen|Acc[15]~13  & \TX|tickgen|Acc[18]~7 ) # (\TX|tickgen|Acc[15]~13  & \TX|tickgen|Acc[18]~7COUT1_59 ))))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , , \TX|Equal0~0_combout )
// \TX|tickgen|Acc[19]~5  = CARRY(((!\TX|tickgen|Acc[18]~7 )) # (!\TX|tickgen|Acc [19]))
// \TX|tickgen|Acc[19]~5COUT1_60  = CARRY(((!\TX|tickgen|Acc[18]~7COUT1_59 )) # (!\TX|tickgen|Acc [19]))

	.clk(\clk~combout ),
	.dataa(\TX|tickgen|Acc [19]),
	.datab(vcc),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\TX|Equal0~0_combout ),
	.ena(vcc),
	.cin(\TX|tickgen|Acc[15]~13 ),
	.cin0(\TX|tickgen|Acc[18]~7 ),
	.cin1(\TX|tickgen|Acc[18]~7COUT1_59 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|tickgen|Acc [19]),
	.cout(),
	.cout0(\TX|tickgen|Acc[19]~5 ),
	.cout1(\TX|tickgen|Acc[19]~5COUT1_60 ));
// synopsys translate_off
defparam \TX|tickgen|Acc[19] .cin0_used = "true";
defparam \TX|tickgen|Acc[19] .cin1_used = "true";
defparam \TX|tickgen|Acc[19] .cin_used = "true";
defparam \TX|tickgen|Acc[19] .lut_mask = "5a5f";
defparam \TX|tickgen|Acc[19] .operation_mode = "arithmetic";
defparam \TX|tickgen|Acc[19] .output_mode = "reg_only";
defparam \TX|tickgen|Acc[19] .register_cascade_mode = "off";
defparam \TX|tickgen|Acc[19] .sum_lutc_input = "cin";
defparam \TX|tickgen|Acc[19] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y6_N4
maxv_lcell \TX|tickgen|Acc[20] (
// Equation(s):
// \TX|tickgen|Acc [20] = DFFEAS(\TX|tickgen|Acc [20] $ ((((!(!\TX|tickgen|Acc[15]~13  & \TX|tickgen|Acc[19]~5 ) # (\TX|tickgen|Acc[15]~13  & \TX|tickgen|Acc[19]~5COUT1_60 ))))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , , \TX|Equal0~0_combout )
// \TX|tickgen|Acc[20]~3  = CARRY((\TX|tickgen|Acc [20] & ((!\TX|tickgen|Acc[19]~5COUT1_60 ))))

	.clk(\clk~combout ),
	.dataa(\TX|tickgen|Acc [20]),
	.datab(vcc),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\TX|Equal0~0_combout ),
	.ena(vcc),
	.cin(\TX|tickgen|Acc[15]~13 ),
	.cin0(\TX|tickgen|Acc[19]~5 ),
	.cin1(\TX|tickgen|Acc[19]~5COUT1_60 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|tickgen|Acc [20]),
	.cout(\TX|tickgen|Acc[20]~3 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|tickgen|Acc[20] .cin0_used = "true";
defparam \TX|tickgen|Acc[20] .cin1_used = "true";
defparam \TX|tickgen|Acc[20] .cin_used = "true";
defparam \TX|tickgen|Acc[20] .lut_mask = "a50a";
defparam \TX|tickgen|Acc[20] .operation_mode = "arithmetic";
defparam \TX|tickgen|Acc[20] .output_mode = "reg_only";
defparam \TX|tickgen|Acc[20] .register_cascade_mode = "off";
defparam \TX|tickgen|Acc[20] .sum_lutc_input = "cin";
defparam \TX|tickgen|Acc[20] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y6_N5
maxv_lcell \TX|tickgen|Acc[21] (
// Equation(s):
// \TX|tickgen|Acc [21] = DFFEAS((((\TX|tickgen|Acc[20]~3 ))), GLOBAL(\clk~combout ), VCC, , , \~GND~combout , , , \TX|Equal0~0_combout )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\TX|Equal0~0_combout ),
	.ena(vcc),
	.cin(\TX|tickgen|Acc[20]~3 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|tickgen|Acc [21]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|tickgen|Acc[21] .cin_used = "true";
defparam \TX|tickgen|Acc[21] .lut_mask = "f0f0";
defparam \TX|tickgen|Acc[21] .operation_mode = "normal";
defparam \TX|tickgen|Acc[21] .output_mode = "reg_only";
defparam \TX|tickgen|Acc[21] .register_cascade_mode = "off";
defparam \TX|tickgen|Acc[21] .sum_lutc_input = "cin";
defparam \TX|tickgen|Acc[21] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N3
maxv_lcell \TX|Mux1~4 (
// Equation(s):
// \TX|Mux1~4_combout  = (\TX|TxD_state [1] & (((!\TX|TxD_state [2]))))

	.clk(gnd),
	.dataa(\TX|TxD_state [1]),
	.datab(vcc),
	.datac(\TX|TxD_state [2]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\TX|Mux1~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|Mux1~4 .lut_mask = "0a0a";
defparam \TX|Mux1~4 .operation_mode = "normal";
defparam \TX|Mux1~4 .output_mode = "comb_only";
defparam \TX|Mux1~4 .register_cascade_mode = "off";
defparam \TX|Mux1~4 .sum_lutc_input = "datac";
defparam \TX|Mux1~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N8
maxv_lcell \TX|TxD_state[0] (
// Equation(s):
// \TX|TxD_state [0] = DFFEAS((\TX|TxD_state [0] & (!\TX|tickgen|Acc [21])) # (!\TX|TxD_state [0] & (\TX|tickgen|Acc [21] & ((\TX|TxD_state [3]) # (\TX|Mux1~4_combout )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\TX|TxD_state [0]),
	.datab(\TX|tickgen|Acc [21]),
	.datac(\TX|TxD_state [3]),
	.datad(\TX|Mux1~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|TxD_state [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|TxD_state[0] .lut_mask = "6662";
defparam \TX|TxD_state[0] .operation_mode = "normal";
defparam \TX|TxD_state[0] .output_mode = "reg_only";
defparam \TX|TxD_state[0] .register_cascade_mode = "off";
defparam \TX|TxD_state[0] .sum_lutc_input = "datac";
defparam \TX|TxD_state[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N7
maxv_lcell \TX|Mux1~0 (
// Equation(s):
// \TX|Mux1~0_combout  = (\TX|TxD_state [0] & (((\TX|tickgen|Acc [21]))))

	.clk(gnd),
	.dataa(\TX|TxD_state [0]),
	.datab(vcc),
	.datac(\TX|tickgen|Acc [21]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\TX|Mux1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|Mux1~0 .lut_mask = "a0a0";
defparam \TX|Mux1~0 .operation_mode = "normal";
defparam \TX|Mux1~0 .output_mode = "comb_only";
defparam \TX|Mux1~0 .register_cascade_mode = "off";
defparam \TX|Mux1~0 .sum_lutc_input = "datac";
defparam \TX|Mux1~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N2
maxv_lcell \TX|Mux1~1 (
// Equation(s):
// \TX|Mux1~1_combout  = (\TX|TxD_state [3] & (\TX|TxD_state [2] $ (((\TX|Mux1~0_combout  & \TX|TxD_state [1])))))

	.clk(gnd),
	.dataa(\TX|TxD_state [2]),
	.datab(\TX|Mux1~0_combout ),
	.datac(\TX|TxD_state [1]),
	.datad(\TX|TxD_state [3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\TX|Mux1~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|Mux1~1 .lut_mask = "6a00";
defparam \TX|Mux1~1 .operation_mode = "normal";
defparam \TX|Mux1~1 .output_mode = "comb_only";
defparam \TX|Mux1~1 .register_cascade_mode = "off";
defparam \TX|Mux1~1 .sum_lutc_input = "datac";
defparam \TX|Mux1~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N6
maxv_lcell \TX|Mux0~2 (
// Equation(s):
// \TX|Mux0~2_combout  = (((!\TX|TxD_state [1] & !\TX|TxD_state [0])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\TX|TxD_state [1]),
	.datad(\TX|TxD_state [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\TX|Mux0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|Mux0~2 .lut_mask = "000f";
defparam \TX|Mux0~2 .operation_mode = "normal";
defparam \TX|Mux0~2 .output_mode = "comb_only";
defparam \TX|Mux0~2 .register_cascade_mode = "off";
defparam \TX|Mux0~2 .sum_lutc_input = "datac";
defparam \TX|Mux0~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N3
maxv_lcell \RX|RxD_state[2] (
// Equation(s):
// \RX|RxD_state [2] = DFFEAS((\RX|RxD_state [3] & (\RX|RxD_state [2] $ (((\RX|RxD_state [1] & \RX|Mux1~0_combout ))))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\RX|RxD_state [1]),
	.datab(\RX|Mux1~0_combout ),
	.datac(\RX|RxD_state [3]),
	.datad(\RX|RxD_state [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|RxD_state [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|RxD_state[2] .lut_mask = "7080";
defparam \RX|RxD_state[2] .operation_mode = "normal";
defparam \RX|RxD_state[2] .output_mode = "reg_only";
defparam \RX|RxD_state[2] .register_cascade_mode = "off";
defparam \RX|RxD_state[2] .sum_lutc_input = "datac";
defparam \RX|RxD_state[2] .synch_mode = "off";
// synopsys translate_on

// Location: PIN_41,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \RxD~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\RxD~combout ),
	.padio(RxD));
// synopsys translate_off
defparam \RxD~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X3_Y5_N0
maxv_lcell \RX|tickgen|Acc[3] (
// Equation(s):
// \RX|tickgen|Acc [3] = DFFEAS((((!\RX|tickgen|Acc [3]))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\RX|tickgen|Acc [3]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|tickgen|Acc [3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|tickgen|Acc[3] .lut_mask = "0f0f";
defparam \RX|tickgen|Acc[3] .operation_mode = "normal";
defparam \RX|tickgen|Acc[3] .output_mode = "reg_only";
defparam \RX|tickgen|Acc[3] .register_cascade_mode = "off";
defparam \RX|tickgen|Acc[3] .sum_lutc_input = "datac";
defparam \RX|tickgen|Acc[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y5_N1
maxv_lcell \RX|tickgen|Acc[4] (
// Equation(s):
// \RX|tickgen|Acc [4] = DFFEAS(\RX|tickgen|Acc [3] $ ((\RX|tickgen|Acc [4])), GLOBAL(\clk~combout ), VCC, , , , , , )
// \RX|tickgen|Acc[4]~35  = CARRY((\RX|tickgen|Acc [3] & (\RX|tickgen|Acc [4])))
// \RX|tickgen|Acc[4]~35COUT1_38  = CARRY((\RX|tickgen|Acc [3] & (\RX|tickgen|Acc [4])))

	.clk(\clk~combout ),
	.dataa(\RX|tickgen|Acc [3]),
	.datab(\RX|tickgen|Acc [4]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|tickgen|Acc [4]),
	.cout(),
	.cout0(\RX|tickgen|Acc[4]~35 ),
	.cout1(\RX|tickgen|Acc[4]~35COUT1_38 ));
// synopsys translate_off
defparam \RX|tickgen|Acc[4] .lut_mask = "6688";
defparam \RX|tickgen|Acc[4] .operation_mode = "arithmetic";
defparam \RX|tickgen|Acc[4] .output_mode = "reg_only";
defparam \RX|tickgen|Acc[4] .register_cascade_mode = "off";
defparam \RX|tickgen|Acc[4] .sum_lutc_input = "datac";
defparam \RX|tickgen|Acc[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y5_N2
maxv_lcell \RX|tickgen|Acc[5] (
// Equation(s):
// \RX|tickgen|Acc [5] = DFFEAS((\RX|tickgen|Acc [5] $ ((\RX|tickgen|Acc[4]~35 ))), GLOBAL(\clk~combout ), VCC, , , , , , )
// \RX|tickgen|Acc[5]~33  = CARRY(((!\RX|tickgen|Acc[4]~35 ) # (!\RX|tickgen|Acc [5])))
// \RX|tickgen|Acc[5]~33COUT1_39  = CARRY(((!\RX|tickgen|Acc[4]~35COUT1_38 ) # (!\RX|tickgen|Acc [5])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\RX|tickgen|Acc [5]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\RX|tickgen|Acc[4]~35 ),
	.cin1(\RX|tickgen|Acc[4]~35COUT1_38 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|tickgen|Acc [5]),
	.cout(),
	.cout0(\RX|tickgen|Acc[5]~33 ),
	.cout1(\RX|tickgen|Acc[5]~33COUT1_39 ));
// synopsys translate_off
defparam \RX|tickgen|Acc[5] .cin0_used = "true";
defparam \RX|tickgen|Acc[5] .cin1_used = "true";
defparam \RX|tickgen|Acc[5] .lut_mask = "3c3f";
defparam \RX|tickgen|Acc[5] .operation_mode = "arithmetic";
defparam \RX|tickgen|Acc[5] .output_mode = "reg_only";
defparam \RX|tickgen|Acc[5] .register_cascade_mode = "off";
defparam \RX|tickgen|Acc[5] .sum_lutc_input = "cin";
defparam \RX|tickgen|Acc[5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y5_N3
maxv_lcell \RX|tickgen|Acc[6] (
// Equation(s):
// \RX|tickgen|Acc [6] = DFFEAS(\RX|tickgen|Acc [6] $ ((((!\RX|tickgen|Acc[5]~33 )))), GLOBAL(\clk~combout ), VCC, , , , , , )
// \RX|tickgen|Acc[6]~31  = CARRY((\RX|tickgen|Acc [6] & ((!\RX|tickgen|Acc[5]~33 ))))
// \RX|tickgen|Acc[6]~31COUT1_40  = CARRY((\RX|tickgen|Acc [6] & ((!\RX|tickgen|Acc[5]~33COUT1_39 ))))

	.clk(\clk~combout ),
	.dataa(\RX|tickgen|Acc [6]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\RX|tickgen|Acc[5]~33 ),
	.cin1(\RX|tickgen|Acc[5]~33COUT1_39 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|tickgen|Acc [6]),
	.cout(),
	.cout0(\RX|tickgen|Acc[6]~31 ),
	.cout1(\RX|tickgen|Acc[6]~31COUT1_40 ));
// synopsys translate_off
defparam \RX|tickgen|Acc[6] .cin0_used = "true";
defparam \RX|tickgen|Acc[6] .cin1_used = "true";
defparam \RX|tickgen|Acc[6] .lut_mask = "a50a";
defparam \RX|tickgen|Acc[6] .operation_mode = "arithmetic";
defparam \RX|tickgen|Acc[6] .output_mode = "reg_only";
defparam \RX|tickgen|Acc[6] .register_cascade_mode = "off";
defparam \RX|tickgen|Acc[6] .sum_lutc_input = "cin";
defparam \RX|tickgen|Acc[6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y5_N4
maxv_lcell \RX|tickgen|Acc[7] (
// Equation(s):
// \RX|tickgen|Acc [7] = DFFEAS(\RX|tickgen|Acc [7] $ ((((!\RX|tickgen|Acc[6]~31 )))), GLOBAL(\clk~combout ), VCC, , , , , , )
// \RX|tickgen|Acc[7]~29  = CARRY((!\RX|tickgen|Acc [7] & ((!\RX|tickgen|Acc[6]~31COUT1_40 ))))

	.clk(\clk~combout ),
	.dataa(\RX|tickgen|Acc [7]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\RX|tickgen|Acc[6]~31 ),
	.cin1(\RX|tickgen|Acc[6]~31COUT1_40 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|tickgen|Acc [7]),
	.cout(\RX|tickgen|Acc[7]~29 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|tickgen|Acc[7] .cin0_used = "true";
defparam \RX|tickgen|Acc[7] .cin1_used = "true";
defparam \RX|tickgen|Acc[7] .lut_mask = "a505";
defparam \RX|tickgen|Acc[7] .operation_mode = "arithmetic";
defparam \RX|tickgen|Acc[7] .output_mode = "reg_only";
defparam \RX|tickgen|Acc[7] .register_cascade_mode = "off";
defparam \RX|tickgen|Acc[7] .sum_lutc_input = "cin";
defparam \RX|tickgen|Acc[7] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y5_N5
maxv_lcell \RX|tickgen|Acc[8] (
// Equation(s):
// \RX|tickgen|Acc [8] = DFFEAS(\RX|tickgen|Acc [8] $ ((((\RX|tickgen|Acc[7]~29 )))), GLOBAL(\clk~combout ), VCC, , , , , , )
// \RX|tickgen|Acc[8]~27  = CARRY((\RX|tickgen|Acc [8]) # ((!\RX|tickgen|Acc[7]~29 )))
// \RX|tickgen|Acc[8]~27COUT1_41  = CARRY((\RX|tickgen|Acc [8]) # ((!\RX|tickgen|Acc[7]~29 )))

	.clk(\clk~combout ),
	.dataa(\RX|tickgen|Acc [8]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\RX|tickgen|Acc[7]~29 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|tickgen|Acc [8]),
	.cout(),
	.cout0(\RX|tickgen|Acc[8]~27 ),
	.cout1(\RX|tickgen|Acc[8]~27COUT1_41 ));
// synopsys translate_off
defparam \RX|tickgen|Acc[8] .cin_used = "true";
defparam \RX|tickgen|Acc[8] .lut_mask = "5aaf";
defparam \RX|tickgen|Acc[8] .operation_mode = "arithmetic";
defparam \RX|tickgen|Acc[8] .output_mode = "reg_only";
defparam \RX|tickgen|Acc[8] .register_cascade_mode = "off";
defparam \RX|tickgen|Acc[8] .sum_lutc_input = "cin";
defparam \RX|tickgen|Acc[8] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y5_N6
maxv_lcell \RX|tickgen|Acc[9] (
// Equation(s):
// \RX|tickgen|Acc [9] = DFFEAS(\RX|tickgen|Acc [9] $ (((((!\RX|tickgen|Acc[7]~29  & \RX|tickgen|Acc[8]~27 ) # (\RX|tickgen|Acc[7]~29  & \RX|tickgen|Acc[8]~27COUT1_41 ))))), GLOBAL(\clk~combout ), VCC, , , , , , )
// \RX|tickgen|Acc[9]~25  = CARRY(((!\RX|tickgen|Acc[8]~27 )) # (!\RX|tickgen|Acc [9]))
// \RX|tickgen|Acc[9]~25COUT1_42  = CARRY(((!\RX|tickgen|Acc[8]~27COUT1_41 )) # (!\RX|tickgen|Acc [9]))

	.clk(\clk~combout ),
	.dataa(\RX|tickgen|Acc [9]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\RX|tickgen|Acc[7]~29 ),
	.cin0(\RX|tickgen|Acc[8]~27 ),
	.cin1(\RX|tickgen|Acc[8]~27COUT1_41 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|tickgen|Acc [9]),
	.cout(),
	.cout0(\RX|tickgen|Acc[9]~25 ),
	.cout1(\RX|tickgen|Acc[9]~25COUT1_42 ));
// synopsys translate_off
defparam \RX|tickgen|Acc[9] .cin0_used = "true";
defparam \RX|tickgen|Acc[9] .cin1_used = "true";
defparam \RX|tickgen|Acc[9] .cin_used = "true";
defparam \RX|tickgen|Acc[9] .lut_mask = "5a5f";
defparam \RX|tickgen|Acc[9] .operation_mode = "arithmetic";
defparam \RX|tickgen|Acc[9] .output_mode = "reg_only";
defparam \RX|tickgen|Acc[9] .register_cascade_mode = "off";
defparam \RX|tickgen|Acc[9] .sum_lutc_input = "cin";
defparam \RX|tickgen|Acc[9] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y5_N7
maxv_lcell \RX|tickgen|Acc[10] (
// Equation(s):
// \RX|tickgen|Acc [10] = DFFEAS((\RX|tickgen|Acc [10] $ ((!(!\RX|tickgen|Acc[7]~29  & \RX|tickgen|Acc[9]~25 ) # (\RX|tickgen|Acc[7]~29  & \RX|tickgen|Acc[9]~25COUT1_42 )))), GLOBAL(\clk~combout ), VCC, , , , , , )
// \RX|tickgen|Acc[10]~23  = CARRY(((\RX|tickgen|Acc [10] & !\RX|tickgen|Acc[9]~25 )))
// \RX|tickgen|Acc[10]~23COUT1_43  = CARRY(((\RX|tickgen|Acc [10] & !\RX|tickgen|Acc[9]~25COUT1_42 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\RX|tickgen|Acc [10]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\RX|tickgen|Acc[7]~29 ),
	.cin0(\RX|tickgen|Acc[9]~25 ),
	.cin1(\RX|tickgen|Acc[9]~25COUT1_42 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|tickgen|Acc [10]),
	.cout(),
	.cout0(\RX|tickgen|Acc[10]~23 ),
	.cout1(\RX|tickgen|Acc[10]~23COUT1_43 ));
// synopsys translate_off
defparam \RX|tickgen|Acc[10] .cin0_used = "true";
defparam \RX|tickgen|Acc[10] .cin1_used = "true";
defparam \RX|tickgen|Acc[10] .cin_used = "true";
defparam \RX|tickgen|Acc[10] .lut_mask = "c30c";
defparam \RX|tickgen|Acc[10] .operation_mode = "arithmetic";
defparam \RX|tickgen|Acc[10] .output_mode = "reg_only";
defparam \RX|tickgen|Acc[10] .register_cascade_mode = "off";
defparam \RX|tickgen|Acc[10] .sum_lutc_input = "cin";
defparam \RX|tickgen|Acc[10] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y5_N8
maxv_lcell \RX|tickgen|Acc[11] (
// Equation(s):
// \RX|tickgen|Acc [11] = DFFEAS(\RX|tickgen|Acc [11] $ ((((!(!\RX|tickgen|Acc[7]~29  & \RX|tickgen|Acc[10]~23 ) # (\RX|tickgen|Acc[7]~29  & \RX|tickgen|Acc[10]~23COUT1_43 ))))), GLOBAL(\clk~combout ), VCC, , , , , , )
// \RX|tickgen|Acc[11]~21  = CARRY((!\RX|tickgen|Acc [11] & ((!\RX|tickgen|Acc[10]~23 ))))
// \RX|tickgen|Acc[11]~21COUT1_44  = CARRY((!\RX|tickgen|Acc [11] & ((!\RX|tickgen|Acc[10]~23COUT1_43 ))))

	.clk(\clk~combout ),
	.dataa(\RX|tickgen|Acc [11]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\RX|tickgen|Acc[7]~29 ),
	.cin0(\RX|tickgen|Acc[10]~23 ),
	.cin1(\RX|tickgen|Acc[10]~23COUT1_43 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|tickgen|Acc [11]),
	.cout(),
	.cout0(\RX|tickgen|Acc[11]~21 ),
	.cout1(\RX|tickgen|Acc[11]~21COUT1_44 ));
// synopsys translate_off
defparam \RX|tickgen|Acc[11] .cin0_used = "true";
defparam \RX|tickgen|Acc[11] .cin1_used = "true";
defparam \RX|tickgen|Acc[11] .cin_used = "true";
defparam \RX|tickgen|Acc[11] .lut_mask = "a505";
defparam \RX|tickgen|Acc[11] .operation_mode = "arithmetic";
defparam \RX|tickgen|Acc[11] .output_mode = "reg_only";
defparam \RX|tickgen|Acc[11] .register_cascade_mode = "off";
defparam \RX|tickgen|Acc[11] .sum_lutc_input = "cin";
defparam \RX|tickgen|Acc[11] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y5_N9
maxv_lcell \RX|tickgen|Acc[12] (
// Equation(s):
// \RX|tickgen|Acc [12] = DFFEAS((\RX|tickgen|Acc [12] $ ((!(!\RX|tickgen|Acc[7]~29  & \RX|tickgen|Acc[11]~21 ) # (\RX|tickgen|Acc[7]~29  & \RX|tickgen|Acc[11]~21COUT1_44 )))), GLOBAL(\clk~combout ), VCC, , , , , , )
// \RX|tickgen|Acc[12]~19  = CARRY(((\RX|tickgen|Acc [12] & !\RX|tickgen|Acc[11]~21COUT1_44 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\RX|tickgen|Acc [12]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\RX|tickgen|Acc[7]~29 ),
	.cin0(\RX|tickgen|Acc[11]~21 ),
	.cin1(\RX|tickgen|Acc[11]~21COUT1_44 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|tickgen|Acc [12]),
	.cout(\RX|tickgen|Acc[12]~19 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|tickgen|Acc[12] .cin0_used = "true";
defparam \RX|tickgen|Acc[12] .cin1_used = "true";
defparam \RX|tickgen|Acc[12] .cin_used = "true";
defparam \RX|tickgen|Acc[12] .lut_mask = "c30c";
defparam \RX|tickgen|Acc[12] .operation_mode = "arithmetic";
defparam \RX|tickgen|Acc[12] .output_mode = "reg_only";
defparam \RX|tickgen|Acc[12] .register_cascade_mode = "off";
defparam \RX|tickgen|Acc[12] .sum_lutc_input = "cin";
defparam \RX|tickgen|Acc[12] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y5_N0
maxv_lcell \RX|tickgen|Acc[13] (
// Equation(s):
// \RX|tickgen|Acc [13] = DFFEAS((\RX|tickgen|Acc [13] $ ((\RX|tickgen|Acc[12]~19 ))), GLOBAL(\clk~combout ), VCC, , , , , , )
// \RX|tickgen|Acc[13]~17  = CARRY(((!\RX|tickgen|Acc[12]~19 ) # (!\RX|tickgen|Acc [13])))
// \RX|tickgen|Acc[13]~17COUT1_45  = CARRY(((!\RX|tickgen|Acc[12]~19 ) # (!\RX|tickgen|Acc [13])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\RX|tickgen|Acc [13]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\RX|tickgen|Acc[12]~19 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|tickgen|Acc [13]),
	.cout(),
	.cout0(\RX|tickgen|Acc[13]~17 ),
	.cout1(\RX|tickgen|Acc[13]~17COUT1_45 ));
// synopsys translate_off
defparam \RX|tickgen|Acc[13] .cin_used = "true";
defparam \RX|tickgen|Acc[13] .lut_mask = "3c3f";
defparam \RX|tickgen|Acc[13] .operation_mode = "arithmetic";
defparam \RX|tickgen|Acc[13] .output_mode = "reg_only";
defparam \RX|tickgen|Acc[13] .register_cascade_mode = "off";
defparam \RX|tickgen|Acc[13] .sum_lutc_input = "cin";
defparam \RX|tickgen|Acc[13] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y5_N1
maxv_lcell \RX|tickgen|Acc[14] (
// Equation(s):
// \RX|tickgen|Acc [14] = DFFEAS((\RX|tickgen|Acc [14] $ ((!(!\RX|tickgen|Acc[12]~19  & \RX|tickgen|Acc[13]~17 ) # (\RX|tickgen|Acc[12]~19  & \RX|tickgen|Acc[13]~17COUT1_45 )))), GLOBAL(\clk~combout ), VCC, , , , , , )
// \RX|tickgen|Acc[14]~15  = CARRY(((\RX|tickgen|Acc [14] & !\RX|tickgen|Acc[13]~17 )))
// \RX|tickgen|Acc[14]~15COUT1_46  = CARRY(((\RX|tickgen|Acc [14] & !\RX|tickgen|Acc[13]~17COUT1_45 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\RX|tickgen|Acc [14]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\RX|tickgen|Acc[12]~19 ),
	.cin0(\RX|tickgen|Acc[13]~17 ),
	.cin1(\RX|tickgen|Acc[13]~17COUT1_45 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|tickgen|Acc [14]),
	.cout(),
	.cout0(\RX|tickgen|Acc[14]~15 ),
	.cout1(\RX|tickgen|Acc[14]~15COUT1_46 ));
// synopsys translate_off
defparam \RX|tickgen|Acc[14] .cin0_used = "true";
defparam \RX|tickgen|Acc[14] .cin1_used = "true";
defparam \RX|tickgen|Acc[14] .cin_used = "true";
defparam \RX|tickgen|Acc[14] .lut_mask = "c30c";
defparam \RX|tickgen|Acc[14] .operation_mode = "arithmetic";
defparam \RX|tickgen|Acc[14] .output_mode = "reg_only";
defparam \RX|tickgen|Acc[14] .register_cascade_mode = "off";
defparam \RX|tickgen|Acc[14] .sum_lutc_input = "cin";
defparam \RX|tickgen|Acc[14] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y5_N2
maxv_lcell \RX|tickgen|Acc[15] (
// Equation(s):
// \RX|tickgen|Acc [15] = DFFEAS((\RX|tickgen|Acc [15] $ (((!\RX|tickgen|Acc[12]~19  & \RX|tickgen|Acc[14]~15 ) # (\RX|tickgen|Acc[12]~19  & \RX|tickgen|Acc[14]~15COUT1_46 )))), GLOBAL(\clk~combout ), VCC, , , , , , )
// \RX|tickgen|Acc[15]~13  = CARRY(((!\RX|tickgen|Acc[14]~15 ) # (!\RX|tickgen|Acc [15])))
// \RX|tickgen|Acc[15]~13COUT1_47  = CARRY(((!\RX|tickgen|Acc[14]~15COUT1_46 ) # (!\RX|tickgen|Acc [15])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\RX|tickgen|Acc [15]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\RX|tickgen|Acc[12]~19 ),
	.cin0(\RX|tickgen|Acc[14]~15 ),
	.cin1(\RX|tickgen|Acc[14]~15COUT1_46 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|tickgen|Acc [15]),
	.cout(),
	.cout0(\RX|tickgen|Acc[15]~13 ),
	.cout1(\RX|tickgen|Acc[15]~13COUT1_47 ));
// synopsys translate_off
defparam \RX|tickgen|Acc[15] .cin0_used = "true";
defparam \RX|tickgen|Acc[15] .cin1_used = "true";
defparam \RX|tickgen|Acc[15] .cin_used = "true";
defparam \RX|tickgen|Acc[15] .lut_mask = "3c3f";
defparam \RX|tickgen|Acc[15] .operation_mode = "arithmetic";
defparam \RX|tickgen|Acc[15] .output_mode = "reg_only";
defparam \RX|tickgen|Acc[15] .register_cascade_mode = "off";
defparam \RX|tickgen|Acc[15] .sum_lutc_input = "cin";
defparam \RX|tickgen|Acc[15] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y5_N3
maxv_lcell \RX|tickgen|Acc[16] (
// Equation(s):
// \RX|tickgen|Acc [16] = DFFEAS(\RX|tickgen|Acc [16] $ ((((!(!\RX|tickgen|Acc[12]~19  & \RX|tickgen|Acc[15]~13 ) # (\RX|tickgen|Acc[12]~19  & \RX|tickgen|Acc[15]~13COUT1_47 ))))), GLOBAL(\clk~combout ), VCC, , , , , , )
// \RX|tickgen|Acc[16]~11  = CARRY((\RX|tickgen|Acc [16] & ((!\RX|tickgen|Acc[15]~13 ))))
// \RX|tickgen|Acc[16]~11COUT1_48  = CARRY((\RX|tickgen|Acc [16] & ((!\RX|tickgen|Acc[15]~13COUT1_47 ))))

	.clk(\clk~combout ),
	.dataa(\RX|tickgen|Acc [16]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\RX|tickgen|Acc[12]~19 ),
	.cin0(\RX|tickgen|Acc[15]~13 ),
	.cin1(\RX|tickgen|Acc[15]~13COUT1_47 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|tickgen|Acc [16]),
	.cout(),
	.cout0(\RX|tickgen|Acc[16]~11 ),
	.cout1(\RX|tickgen|Acc[16]~11COUT1_48 ));
// synopsys translate_off
defparam \RX|tickgen|Acc[16] .cin0_used = "true";
defparam \RX|tickgen|Acc[16] .cin1_used = "true";
defparam \RX|tickgen|Acc[16] .cin_used = "true";
defparam \RX|tickgen|Acc[16] .lut_mask = "a50a";
defparam \RX|tickgen|Acc[16] .operation_mode = "arithmetic";
defparam \RX|tickgen|Acc[16] .output_mode = "reg_only";
defparam \RX|tickgen|Acc[16] .register_cascade_mode = "off";
defparam \RX|tickgen|Acc[16] .sum_lutc_input = "cin";
defparam \RX|tickgen|Acc[16] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y5_N4
maxv_lcell \RX|tickgen|Acc[17] (
// Equation(s):
// \RX|tickgen|Acc [17] = DFFEAS(\RX|tickgen|Acc [17] $ (((((!\RX|tickgen|Acc[12]~19  & \RX|tickgen|Acc[16]~11 ) # (\RX|tickgen|Acc[12]~19  & \RX|tickgen|Acc[16]~11COUT1_48 ))))), GLOBAL(\clk~combout ), VCC, , , , , , )
// \RX|tickgen|Acc[17]~9  = CARRY(((!\RX|tickgen|Acc[16]~11COUT1_48 )) # (!\RX|tickgen|Acc [17]))

	.clk(\clk~combout ),
	.dataa(\RX|tickgen|Acc [17]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\RX|tickgen|Acc[12]~19 ),
	.cin0(\RX|tickgen|Acc[16]~11 ),
	.cin1(\RX|tickgen|Acc[16]~11COUT1_48 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|tickgen|Acc [17]),
	.cout(\RX|tickgen|Acc[17]~9 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|tickgen|Acc[17] .cin0_used = "true";
defparam \RX|tickgen|Acc[17] .cin1_used = "true";
defparam \RX|tickgen|Acc[17] .cin_used = "true";
defparam \RX|tickgen|Acc[17] .lut_mask = "5a5f";
defparam \RX|tickgen|Acc[17] .operation_mode = "arithmetic";
defparam \RX|tickgen|Acc[17] .output_mode = "reg_only";
defparam \RX|tickgen|Acc[17] .register_cascade_mode = "off";
defparam \RX|tickgen|Acc[17] .sum_lutc_input = "cin";
defparam \RX|tickgen|Acc[17] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y5_N5
maxv_lcell \RX|tickgen|Acc[18] (
// Equation(s):
// \RX|tickgen|Acc [18] = DFFEAS(\RX|tickgen|Acc [18] $ ((((!\RX|tickgen|Acc[17]~9 )))), GLOBAL(\clk~combout ), VCC, , , , , , )
// \RX|tickgen|Acc[18]~7  = CARRY((\RX|tickgen|Acc [18] & ((!\RX|tickgen|Acc[17]~9 ))))
// \RX|tickgen|Acc[18]~7COUT1_49  = CARRY((\RX|tickgen|Acc [18] & ((!\RX|tickgen|Acc[17]~9 ))))

	.clk(\clk~combout ),
	.dataa(\RX|tickgen|Acc [18]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\RX|tickgen|Acc[17]~9 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|tickgen|Acc [18]),
	.cout(),
	.cout0(\RX|tickgen|Acc[18]~7 ),
	.cout1(\RX|tickgen|Acc[18]~7COUT1_49 ));
// synopsys translate_off
defparam \RX|tickgen|Acc[18] .cin_used = "true";
defparam \RX|tickgen|Acc[18] .lut_mask = "a50a";
defparam \RX|tickgen|Acc[18] .operation_mode = "arithmetic";
defparam \RX|tickgen|Acc[18] .output_mode = "reg_only";
defparam \RX|tickgen|Acc[18] .register_cascade_mode = "off";
defparam \RX|tickgen|Acc[18] .sum_lutc_input = "cin";
defparam \RX|tickgen|Acc[18] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y5_N6
maxv_lcell \RX|tickgen|Acc[19] (
// Equation(s):
// \RX|tickgen|Acc [19] = DFFEAS(\RX|tickgen|Acc [19] $ (((((!\RX|tickgen|Acc[17]~9  & \RX|tickgen|Acc[18]~7 ) # (\RX|tickgen|Acc[17]~9  & \RX|tickgen|Acc[18]~7COUT1_49 ))))), GLOBAL(\clk~combout ), VCC, , , , , , )
// \RX|tickgen|Acc[19]~5  = CARRY(((!\RX|tickgen|Acc[18]~7 )) # (!\RX|tickgen|Acc [19]))
// \RX|tickgen|Acc[19]~5COUT1_50  = CARRY(((!\RX|tickgen|Acc[18]~7COUT1_49 )) # (!\RX|tickgen|Acc [19]))

	.clk(\clk~combout ),
	.dataa(\RX|tickgen|Acc [19]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\RX|tickgen|Acc[17]~9 ),
	.cin0(\RX|tickgen|Acc[18]~7 ),
	.cin1(\RX|tickgen|Acc[18]~7COUT1_49 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|tickgen|Acc [19]),
	.cout(),
	.cout0(\RX|tickgen|Acc[19]~5 ),
	.cout1(\RX|tickgen|Acc[19]~5COUT1_50 ));
// synopsys translate_off
defparam \RX|tickgen|Acc[19] .cin0_used = "true";
defparam \RX|tickgen|Acc[19] .cin1_used = "true";
defparam \RX|tickgen|Acc[19] .cin_used = "true";
defparam \RX|tickgen|Acc[19] .lut_mask = "5a5f";
defparam \RX|tickgen|Acc[19] .operation_mode = "arithmetic";
defparam \RX|tickgen|Acc[19] .output_mode = "reg_only";
defparam \RX|tickgen|Acc[19] .register_cascade_mode = "off";
defparam \RX|tickgen|Acc[19] .sum_lutc_input = "cin";
defparam \RX|tickgen|Acc[19] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y5_N7
maxv_lcell \RX|tickgen|Acc[20] (
// Equation(s):
// \RX|tickgen|Acc [20] = DFFEAS((\RX|tickgen|Acc [20] $ ((!(!\RX|tickgen|Acc[17]~9  & \RX|tickgen|Acc[19]~5 ) # (\RX|tickgen|Acc[17]~9  & \RX|tickgen|Acc[19]~5COUT1_50 )))), GLOBAL(\clk~combout ), VCC, , , , , , )
// \RX|tickgen|Acc[20]~3  = CARRY(((\RX|tickgen|Acc [20] & !\RX|tickgen|Acc[19]~5 )))
// \RX|tickgen|Acc[20]~3COUT1_51  = CARRY(((\RX|tickgen|Acc [20] & !\RX|tickgen|Acc[19]~5COUT1_50 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\RX|tickgen|Acc [20]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\RX|tickgen|Acc[17]~9 ),
	.cin0(\RX|tickgen|Acc[19]~5 ),
	.cin1(\RX|tickgen|Acc[19]~5COUT1_50 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|tickgen|Acc [20]),
	.cout(),
	.cout0(\RX|tickgen|Acc[20]~3 ),
	.cout1(\RX|tickgen|Acc[20]~3COUT1_51 ));
// synopsys translate_off
defparam \RX|tickgen|Acc[20] .cin0_used = "true";
defparam \RX|tickgen|Acc[20] .cin1_used = "true";
defparam \RX|tickgen|Acc[20] .cin_used = "true";
defparam \RX|tickgen|Acc[20] .lut_mask = "c30c";
defparam \RX|tickgen|Acc[20] .operation_mode = "arithmetic";
defparam \RX|tickgen|Acc[20] .output_mode = "reg_only";
defparam \RX|tickgen|Acc[20] .register_cascade_mode = "off";
defparam \RX|tickgen|Acc[20] .sum_lutc_input = "cin";
defparam \RX|tickgen|Acc[20] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y5_N8
maxv_lcell \RX|tickgen|Acc[21] (
// Equation(s):
// \RX|tickgen|Acc [21] = DFFEAS(((((!\RX|tickgen|Acc[17]~9  & \RX|tickgen|Acc[20]~3 ) # (\RX|tickgen|Acc[17]~9  & \RX|tickgen|Acc[20]~3COUT1_51 )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\RX|tickgen|Acc[17]~9 ),
	.cin0(\RX|tickgen|Acc[20]~3 ),
	.cin1(\RX|tickgen|Acc[20]~3COUT1_51 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|tickgen|Acc [21]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|tickgen|Acc[21] .cin0_used = "true";
defparam \RX|tickgen|Acc[21] .cin1_used = "true";
defparam \RX|tickgen|Acc[21] .cin_used = "true";
defparam \RX|tickgen|Acc[21] .lut_mask = "f0f0";
defparam \RX|tickgen|Acc[21] .operation_mode = "normal";
defparam \RX|tickgen|Acc[21] .output_mode = "reg_only";
defparam \RX|tickgen|Acc[21] .register_cascade_mode = "off";
defparam \RX|tickgen|Acc[21] .sum_lutc_input = "cin";
defparam \RX|tickgen|Acc[21] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N1
maxv_lcell \RX|RxD_sync[0] (
// Equation(s):
// \RX|RxD_sync [0] = DFFEAS((((!\RxD~combout ))), GLOBAL(\clk~combout ), VCC, , \RX|tickgen|Acc [21], , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\RxD~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\RX|tickgen|Acc [21]),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|RxD_sync [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|RxD_sync[0] .lut_mask = "00ff";
defparam \RX|RxD_sync[0] .operation_mode = "normal";
defparam \RX|RxD_sync[0] .output_mode = "reg_only";
defparam \RX|RxD_sync[0] .register_cascade_mode = "off";
defparam \RX|RxD_sync[0] .sum_lutc_input = "datac";
defparam \RX|RxD_sync[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N7
maxv_lcell \RX|RxD_sync[1] (
// Equation(s):
// \RX|RxD_sync [1] = DFFEAS((((\RX|RxD_sync [0]))), GLOBAL(\clk~combout ), VCC, , \RX|tickgen|Acc [21], , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\RX|RxD_sync [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\RX|tickgen|Acc [21]),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|RxD_sync [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|RxD_sync[1] .lut_mask = "ff00";
defparam \RX|RxD_sync[1] .operation_mode = "normal";
defparam \RX|RxD_sync[1] .output_mode = "reg_only";
defparam \RX|RxD_sync[1] .register_cascade_mode = "off";
defparam \RX|RxD_sync[1] .sum_lutc_input = "datac";
defparam \RX|RxD_sync[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N5
maxv_lcell \RX|Filter_cnt[1] (
// Equation(s):
// \RX|Filter_cnt [1] = DFFEAS(((\RX|RxD_sync [1] & ((\RX|Filter_cnt [1]) # (\RX|Filter_cnt [0]))) # (!\RX|RxD_sync [1] & (\RX|Filter_cnt [1] & \RX|Filter_cnt [0]))), GLOBAL(\clk~combout ), VCC, , \RX|tickgen|Acc [21], , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\RX|RxD_sync [1]),
	.datac(\RX|Filter_cnt [1]),
	.datad(\RX|Filter_cnt [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\RX|tickgen|Acc [21]),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|Filter_cnt [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|Filter_cnt[1] .lut_mask = "fcc0";
defparam \RX|Filter_cnt[1] .operation_mode = "normal";
defparam \RX|Filter_cnt[1] .output_mode = "reg_only";
defparam \RX|Filter_cnt[1] .register_cascade_mode = "off";
defparam \RX|Filter_cnt[1] .sum_lutc_input = "datac";
defparam \RX|Filter_cnt[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N9
maxv_lcell \RX|Filter_cnt[0] (
// Equation(s):
// \RX|Filter_cnt [0] = DFFEAS((\RX|tickgen|Acc [21] & ((\RX|Filter_cnt [1] & ((\RX|RxD_sync [1]) # (!\RX|Filter_cnt [0]))) # (!\RX|Filter_cnt [1] & (\RX|RxD_sync [1] & !\RX|Filter_cnt [0])))) # (!\RX|tickgen|Acc [21] & (((\RX|Filter_cnt [0])))), 
// GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\RX|Filter_cnt [1]),
	.datab(\RX|RxD_sync [1]),
	.datac(\RX|tickgen|Acc [21]),
	.datad(\RX|Filter_cnt [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|Filter_cnt [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|Filter_cnt[0] .lut_mask = "8fe0";
defparam \RX|Filter_cnt[0] .operation_mode = "normal";
defparam \RX|Filter_cnt[0] .output_mode = "reg_only";
defparam \RX|Filter_cnt[0] .register_cascade_mode = "off";
defparam \RX|Filter_cnt[0] .sum_lutc_input = "datac";
defparam \RX|Filter_cnt[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N0
maxv_lcell \RX|RxD_bit (
// Equation(s):
// \RX|RxD_bit~regout  = DFFEAS(((\RX|Filter_cnt [0] & ((\RX|Filter_cnt [1]) # (\RX|RxD_bit~regout ))) # (!\RX|Filter_cnt [0] & (\RX|Filter_cnt [1] & \RX|RxD_bit~regout ))), GLOBAL(\clk~combout ), VCC, , \RX|tickgen|Acc [21], , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\RX|Filter_cnt [0]),
	.datac(\RX|Filter_cnt [1]),
	.datad(\RX|RxD_bit~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\RX|tickgen|Acc [21]),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|RxD_bit~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|RxD_bit .lut_mask = "fcc0";
defparam \RX|RxD_bit .operation_mode = "normal";
defparam \RX|RxD_bit .output_mode = "reg_only";
defparam \RX|RxD_bit .register_cascade_mode = "off";
defparam \RX|RxD_bit .sum_lutc_input = "datac";
defparam \RX|RxD_bit .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N7
maxv_lcell \RX|Mux3~0 (
// Equation(s):
// \RX|Mux3~0_combout  = (\RX|RxD_state [2] & (((\RX|RxD_state [0])))) # (!\RX|RxD_state [2] & ((\RX|RxD_state [0] & ((\RX|RxD_state [1]))) # (!\RX|RxD_state [0] & (\RX|RxD_bit~regout  & !\RX|RxD_state [1]))))

	.clk(gnd),
	.dataa(\RX|RxD_state [2]),
	.datab(\RX|RxD_bit~regout ),
	.datac(\RX|RxD_state [0]),
	.datad(\RX|RxD_state [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\RX|Mux3~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|Mux3~0 .lut_mask = "f0a4";
defparam \RX|Mux3~0 .operation_mode = "normal";
defparam \RX|Mux3~0 .output_mode = "comb_only";
defparam \RX|Mux3~0 .register_cascade_mode = "off";
defparam \RX|Mux3~0 .sum_lutc_input = "datac";
defparam \RX|Mux3~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N4
maxv_lcell \RX|Equal4~0 (
// Equation(s):
// \RX|Equal4~0_combout  = (!\RX|RxD_state [0] & (!\RX|RxD_state [2] & (!\RX|RxD_state [3] & !\RX|RxD_state [1])))

	.clk(gnd),
	.dataa(\RX|RxD_state [0]),
	.datab(\RX|RxD_state [2]),
	.datac(\RX|RxD_state [3]),
	.datad(\RX|RxD_state [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\RX|Equal4~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|Equal4~0 .lut_mask = "0001";
defparam \RX|Equal4~0 .operation_mode = "normal";
defparam \RX|Equal4~0 .output_mode = "comb_only";
defparam \RX|Equal4~0 .register_cascade_mode = "off";
defparam \RX|Equal4~0 .sum_lutc_input = "datac";
defparam \RX|Equal4~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N3
maxv_lcell \RX|OversamplingCnt[0] (
// Equation(s):
// \RX|OversamplingCnt [0] = DFFEAS((!\RX|OversamplingCnt [0] & (((!\RX|Equal4~0_combout )))), GLOBAL(\clk~combout ), VCC, , \RX|tickgen|Acc [21], , , , )

	.clk(\clk~combout ),
	.dataa(\RX|OversamplingCnt [0]),
	.datab(vcc),
	.datac(vcc),
	.datad(\RX|Equal4~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\RX|tickgen|Acc [21]),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|OversamplingCnt [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|OversamplingCnt[0] .lut_mask = "0055";
defparam \RX|OversamplingCnt[0] .operation_mode = "normal";
defparam \RX|OversamplingCnt[0] .output_mode = "reg_only";
defparam \RX|OversamplingCnt[0] .register_cascade_mode = "off";
defparam \RX|OversamplingCnt[0] .sum_lutc_input = "datac";
defparam \RX|OversamplingCnt[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N8
maxv_lcell \RX|OversamplingCnt[1] (
// Equation(s):
// \RX|OversamplingCnt [1] = DFFEAS((!\RX|Equal4~0_combout  & (\RX|OversamplingCnt [1] $ (((\RX|OversamplingCnt [0]))))), GLOBAL(\clk~combout ), VCC, , \RX|tickgen|Acc [21], , , , )

	.clk(\clk~combout ),
	.dataa(\RX|OversamplingCnt [1]),
	.datab(\RX|Equal4~0_combout ),
	.datac(vcc),
	.datad(\RX|OversamplingCnt [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\RX|tickgen|Acc [21]),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|OversamplingCnt [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|OversamplingCnt[1] .lut_mask = "1122";
defparam \RX|OversamplingCnt[1] .operation_mode = "normal";
defparam \RX|OversamplingCnt[1] .output_mode = "reg_only";
defparam \RX|OversamplingCnt[1] .register_cascade_mode = "off";
defparam \RX|OversamplingCnt[1] .sum_lutc_input = "datac";
defparam \RX|OversamplingCnt[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N6
maxv_lcell \RX|OversamplingCnt[2] (
// Equation(s):
// \RX|OversamplingCnt [2] = DFFEAS((!\RX|Equal4~0_combout  & (\RX|OversamplingCnt [2] $ (((\RX|OversamplingCnt [1] & \RX|OversamplingCnt [0]))))), GLOBAL(\clk~combout ), VCC, , \RX|tickgen|Acc [21], , , , )

	.clk(\clk~combout ),
	.dataa(\RX|OversamplingCnt [1]),
	.datab(\RX|Equal4~0_combout ),
	.datac(\RX|OversamplingCnt [2]),
	.datad(\RX|OversamplingCnt [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\RX|tickgen|Acc [21]),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|OversamplingCnt [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|OversamplingCnt[2] .lut_mask = "1230";
defparam \RX|OversamplingCnt[2] .operation_mode = "normal";
defparam \RX|OversamplingCnt[2] .output_mode = "reg_only";
defparam \RX|OversamplingCnt[2] .register_cascade_mode = "off";
defparam \RX|OversamplingCnt[2] .sum_lutc_input = "datac";
defparam \RX|OversamplingCnt[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N2
maxv_lcell \RX|sampleNow~0 (
// Equation(s):
// \RX|sampleNow~0_combout  = (\RX|OversamplingCnt [1] & (\RX|tickgen|Acc [21] & (!\RX|OversamplingCnt [2] & \RX|OversamplingCnt [0])))

	.clk(gnd),
	.dataa(\RX|OversamplingCnt [1]),
	.datab(\RX|tickgen|Acc [21]),
	.datac(\RX|OversamplingCnt [2]),
	.datad(\RX|OversamplingCnt [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\RX|sampleNow~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|sampleNow~0 .lut_mask = "0800";
defparam \RX|sampleNow~0 .operation_mode = "normal";
defparam \RX|sampleNow~0 .output_mode = "comb_only";
defparam \RX|sampleNow~0 .register_cascade_mode = "off";
defparam \RX|sampleNow~0 .sum_lutc_input = "datac";
defparam \RX|sampleNow~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N6
maxv_lcell \RX|RxD_state[0] (
// Equation(s):
// \RX|RxD_state [0] = DFFEAS((\RX|RxD_state [0] & (!\RX|sampleNow~0_combout  & ((\RX|RxD_state [3]) # (!\RX|Mux3~0_combout )))) # (!\RX|RxD_state [0] & ((\RX|RxD_state [3] & ((\RX|sampleNow~0_combout ))) # (!\RX|RxD_state [3] & (\RX|Mux3~0_combout )))), 
// GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\RX|RxD_state [0]),
	.datab(\RX|Mux3~0_combout ),
	.datac(\RX|RxD_state [3]),
	.datad(\RX|sampleNow~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|RxD_state [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|RxD_state[0] .lut_mask = "54a6";
defparam \RX|RxD_state[0] .operation_mode = "normal";
defparam \RX|RxD_state[0] .output_mode = "reg_only";
defparam \RX|RxD_state[0] .register_cascade_mode = "off";
defparam \RX|RxD_state[0] .sum_lutc_input = "datac";
defparam \RX|RxD_state[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N1
maxv_lcell \RX|Mux1~0 (
// Equation(s):
// \RX|Mux1~0_combout  = (\RX|RxD_state [0] & (((\RX|sampleNow~0_combout ))))

	.clk(gnd),
	.dataa(\RX|RxD_state [0]),
	.datab(vcc),
	.datac(\RX|sampleNow~0_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\RX|Mux1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|Mux1~0 .lut_mask = "a0a0";
defparam \RX|Mux1~0 .operation_mode = "normal";
defparam \RX|Mux1~0 .output_mode = "comb_only";
defparam \RX|Mux1~0 .register_cascade_mode = "off";
defparam \RX|Mux1~0 .sum_lutc_input = "datac";
defparam \RX|Mux1~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N9
maxv_lcell \RX|Mux2~0 (
// Equation(s):
// \RX|Mux2~0_combout  = (\RX|RxD_state [0] & (\RX|RxD_state [3] & ((\RX|RxD_state [2]) # (!\RX|sampleNow~0_combout )))) # (!\RX|RxD_state [0] & ((\RX|RxD_state [3]) # ((!\RX|sampleNow~0_combout  & !\RX|RxD_state [2]))))

	.clk(gnd),
	.dataa(\RX|RxD_state [0]),
	.datab(\RX|sampleNow~0_combout ),
	.datac(\RX|RxD_state [3]),
	.datad(\RX|RxD_state [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\RX|Mux2~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|Mux2~0 .lut_mask = "f071";
defparam \RX|Mux2~0 .operation_mode = "normal";
defparam \RX|Mux2~0 .output_mode = "comb_only";
defparam \RX|Mux2~0 .register_cascade_mode = "off";
defparam \RX|Mux2~0 .sum_lutc_input = "datac";
defparam \RX|Mux2~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N8
maxv_lcell \RX|RxD_state[1] (
// Equation(s):
// \RX|RxD_state [1] = DFFEAS((\RX|RxD_state [1] & (((\RX|Mux2~0_combout )))) # (!\RX|RxD_state [1] & (\RX|Mux1~0_combout  & (\RX|RxD_state [3]))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\RX|RxD_state [1]),
	.datab(\RX|Mux1~0_combout ),
	.datac(\RX|RxD_state [3]),
	.datad(\RX|Mux2~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|RxD_state [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|RxD_state[1] .lut_mask = "ea40";
defparam \RX|RxD_state[1] .operation_mode = "normal";
defparam \RX|RxD_state[1] .output_mode = "reg_only";
defparam \RX|RxD_state[1] .register_cascade_mode = "off";
defparam \RX|RxD_state[1] .sum_lutc_input = "datac";
defparam \RX|RxD_state[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N5
maxv_lcell \RX|RxD_state[3] (
// Equation(s):
// \RX|RxD_state [3] = DFFEAS((\RX|RxD_state [1] & (\RX|RxD_state [3] & ((!\RX|Mux1~0_combout ) # (!\RX|RxD_state [2])))) # (!\RX|RxD_state [1] & ((\RX|RxD_state [3]) # ((!\RX|RxD_state [2] & \RX|Mux1~0_combout )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\RX|RxD_state [1]),
	.datab(\RX|RxD_state [2]),
	.datac(\RX|RxD_state [3]),
	.datad(\RX|Mux1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|RxD_state [3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|RxD_state[3] .lut_mask = "71f0";
defparam \RX|RxD_state[3] .operation_mode = "normal";
defparam \RX|RxD_state[3] .output_mode = "reg_only";
defparam \RX|RxD_state[3] .register_cascade_mode = "off";
defparam \RX|RxD_state[3] .sum_lutc_input = "datac";
defparam \RX|RxD_state[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N2
maxv_lcell \RX|RxD_data_ready~0 (
// Equation(s):
// \RX|RxD_data_ready~0_combout  = (!\RX|RxD_state [2] & (!\RX|RxD_bit~regout  & (!\RX|RxD_state [0] & \RX|RxD_state [1])))

	.clk(gnd),
	.dataa(\RX|RxD_state [2]),
	.datab(\RX|RxD_bit~regout ),
	.datac(\RX|RxD_state [0]),
	.datad(\RX|RxD_state [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\RX|RxD_data_ready~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|RxD_data_ready~0 .lut_mask = "0100";
defparam \RX|RxD_data_ready~0 .operation_mode = "normal";
defparam \RX|RxD_data_ready~0 .output_mode = "comb_only";
defparam \RX|RxD_data_ready~0 .register_cascade_mode = "off";
defparam \RX|RxD_data_ready~0 .sum_lutc_input = "datac";
defparam \RX|RxD_data_ready~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N0
maxv_lcell \RX|RxD_data_ready (
// Equation(s):
// \RX|RxD_data_ready~regout  = DFFEAS((!\RX|RxD_state [3] & (((\RX|sampleNow~0_combout  & \RX|RxD_data_ready~0_combout )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\RX|RxD_state [3]),
	.datab(vcc),
	.datac(\RX|sampleNow~0_combout ),
	.datad(\RX|RxD_data_ready~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|RxD_data_ready~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|RxD_data_ready .lut_mask = "5000";
defparam \RX|RxD_data_ready .operation_mode = "normal";
defparam \RX|RxD_data_ready .output_mode = "reg_only";
defparam \RX|RxD_data_ready .register_cascade_mode = "off";
defparam \RX|RxD_data_ready .sum_lutc_input = "datac";
defparam \RX|RxD_data_ready .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N1
maxv_lcell \TX|Mux1~2 (
// Equation(s):
// \TX|Mux1~2_combout  = (\TX|TxD_state [2] & (!\TX|tickgen|Acc [21])) # (!\TX|TxD_state [2] & (((\TX|Mux0~2_combout  & \RX|RxD_data_ready~regout ))))

	.clk(gnd),
	.dataa(\TX|TxD_state [2]),
	.datab(\TX|tickgen|Acc [21]),
	.datac(\TX|Mux0~2_combout ),
	.datad(\RX|RxD_data_ready~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\TX|Mux1~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|Mux1~2 .lut_mask = "7222";
defparam \TX|Mux1~2 .operation_mode = "normal";
defparam \TX|Mux1~2 .output_mode = "comb_only";
defparam \TX|Mux1~2 .register_cascade_mode = "off";
defparam \TX|Mux1~2 .sum_lutc_input = "datac";
defparam \TX|Mux1~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N5
maxv_lcell \TX|TxD_state[2] (
// Equation(s):
// \TX|TxD_state [2] = DFFEAS(((\TX|Mux1~1_combout ) # ((!\TX|TxD_state [3] & \TX|Mux1~2_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\TX|Mux1~1_combout ),
	.datac(\TX|TxD_state [3]),
	.datad(\TX|Mux1~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|TxD_state [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|TxD_state[2] .lut_mask = "cfcc";
defparam \TX|TxD_state[2] .operation_mode = "normal";
defparam \TX|TxD_state[2] .output_mode = "reg_only";
defparam \TX|TxD_state[2] .register_cascade_mode = "off";
defparam \TX|TxD_state[2] .sum_lutc_input = "datac";
defparam \TX|TxD_state[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N0
maxv_lcell \TX|always0~0 (
// Equation(s):
// \TX|always0~0_combout  = (!\TX|TxD_state [2] & (!\TX|TxD_state [3] & (\TX|Mux0~2_combout  & \RX|RxD_data_ready~regout )))

	.clk(gnd),
	.dataa(\TX|TxD_state [2]),
	.datab(\TX|TxD_state [3]),
	.datac(\TX|Mux0~2_combout ),
	.datad(\RX|RxD_data_ready~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\TX|always0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|always0~0 .lut_mask = "1000";
defparam \TX|always0~0 .operation_mode = "normal";
defparam \TX|always0~0 .output_mode = "comb_only";
defparam \TX|always0~0 .register_cascade_mode = "off";
defparam \TX|always0~0 .sum_lutc_input = "datac";
defparam \TX|always0~0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_17,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \GPin[0]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\GPin~combout [0]),
	.padio(GPin[0]));
// synopsys translate_off
defparam \GPin[0]~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_27,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \GPin[1]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\GPin~combout [1]),
	.padio(GPin[1]));
// synopsys translate_off
defparam \GPin[1]~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_35,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \GPin[3]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\GPin~combout [3]),
	.padio(GPin[3]));
// synopsys translate_off
defparam \GPin[3]~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_30,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \GPin[7]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\GPin~combout [7]),
	.padio(GPin[7]));
// synopsys translate_off
defparam \GPin[7]~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X5_Y5_N0
maxv_lcell \TX|always0~1 (
// Equation(s):
// \TX|always0~1_combout  = (\TX|tickgen|Acc [21] & (((\TX|TxD_state [3]))))

	.clk(gnd),
	.dataa(\TX|tickgen|Acc [21]),
	.datab(vcc),
	.datac(vcc),
	.datad(\TX|TxD_state [3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\TX|always0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|always0~1 .lut_mask = "aa00";
defparam \TX|always0~1 .operation_mode = "normal";
defparam \TX|always0~1 .output_mode = "comb_only";
defparam \TX|always0~1 .register_cascade_mode = "off";
defparam \TX|always0~1 .sum_lutc_input = "datac";
defparam \TX|always0~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y5_N4
maxv_lcell \TX|TxD_shift[7] (
// Equation(s):
// \TX|TxD_shift [7] = DFFEAS((\TX|always0~0_combout  & (\GPin~combout [7])) # (!\TX|always0~0_combout  & (((!\TX|always0~1_combout  & \TX|TxD_shift [7])))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\GPin~combout [7]),
	.datab(\TX|always0~1_combout ),
	.datac(\TX|TxD_shift [7]),
	.datad(\TX|always0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|TxD_shift [7]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|TxD_shift[7] .lut_mask = "aa30";
defparam \TX|TxD_shift[7] .operation_mode = "normal";
defparam \TX|TxD_shift[7] .output_mode = "reg_only";
defparam \TX|TxD_shift[7] .register_cascade_mode = "off";
defparam \TX|TxD_shift[7] .sum_lutc_input = "datac";
defparam \TX|TxD_shift[7] .synch_mode = "off";
// synopsys translate_on

// Location: PIN_33,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \GPin[6]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\GPin~combout [6]),
	.padio(GPin[6]));
// synopsys translate_off
defparam \GPin[6]~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X5_Y5_N6
maxv_lcell \TX|TxD_shift[0]~10 (
// Equation(s):
// \TX|TxD_shift[0]~10_combout  = (\TX|always0~0_combout ) # ((\TX|tickgen|Acc [21] & ((\TX|TxD_state [3]))))

	.clk(gnd),
	.dataa(\TX|tickgen|Acc [21]),
	.datab(\TX|always0~0_combout ),
	.datac(vcc),
	.datad(\TX|TxD_state [3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\TX|TxD_shift[0]~10_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|TxD_shift[0]~10 .lut_mask = "eecc";
defparam \TX|TxD_shift[0]~10 .operation_mode = "normal";
defparam \TX|TxD_shift[0]~10 .output_mode = "comb_only";
defparam \TX|TxD_shift[0]~10 .register_cascade_mode = "off";
defparam \TX|TxD_shift[0]~10 .sum_lutc_input = "datac";
defparam \TX|TxD_shift[0]~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y5_N3
maxv_lcell \TX|TxD_shift[6] (
// Equation(s):
// \TX|TxD_shift [6] = DFFEAS(((\TX|always0~0_combout  & ((\GPin~combout [6]))) # (!\TX|always0~0_combout  & (\TX|TxD_shift [7]))), GLOBAL(\clk~combout ), VCC, , \TX|TxD_shift[0]~10_combout , , , , )

	.clk(\clk~combout ),
	.dataa(\TX|TxD_shift [7]),
	.datab(vcc),
	.datac(\TX|always0~0_combout ),
	.datad(\GPin~combout [6]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\TX|TxD_shift[0]~10_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|TxD_shift [6]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|TxD_shift[6] .lut_mask = "fa0a";
defparam \TX|TxD_shift[6] .operation_mode = "normal";
defparam \TX|TxD_shift[6] .output_mode = "reg_only";
defparam \TX|TxD_shift[6] .register_cascade_mode = "off";
defparam \TX|TxD_shift[6] .sum_lutc_input = "datac";
defparam \TX|TxD_shift[6] .synch_mode = "off";
// synopsys translate_on

// Location: PIN_36,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \GPin[5]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\GPin~combout [5]),
	.padio(GPin[5]));
// synopsys translate_off
defparam \GPin[5]~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X5_Y5_N7
maxv_lcell \TX|TxD_shift[5] (
// Equation(s):
// \TX|TxD_shift [5] = DFFEAS(((\TX|always0~0_combout  & ((\GPin~combout [5]))) # (!\TX|always0~0_combout  & (\TX|TxD_shift [6]))), GLOBAL(\clk~combout ), VCC, , \TX|TxD_shift[0]~10_combout , , , , )

	.clk(\clk~combout ),
	.dataa(\TX|TxD_shift [6]),
	.datab(vcc),
	.datac(\TX|always0~0_combout ),
	.datad(\GPin~combout [5]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\TX|TxD_shift[0]~10_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|TxD_shift [5]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|TxD_shift[5] .lut_mask = "fa0a";
defparam \TX|TxD_shift[5] .operation_mode = "normal";
defparam \TX|TxD_shift[5] .output_mode = "reg_only";
defparam \TX|TxD_shift[5] .register_cascade_mode = "off";
defparam \TX|TxD_shift[5] .sum_lutc_input = "datac";
defparam \TX|TxD_shift[5] .synch_mode = "off";
// synopsys translate_on

// Location: PIN_34,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \GPin[4]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\GPin~combout [4]),
	.padio(GPin[4]));
// synopsys translate_off
defparam \GPin[4]~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X5_Y5_N9
maxv_lcell \TX|TxD_shift[4] (
// Equation(s):
// \TX|TxD_shift [4] = DFFEAS(((\TX|always0~0_combout  & ((\GPin~combout [4]))) # (!\TX|always0~0_combout  & (\TX|TxD_shift [5]))), GLOBAL(\clk~combout ), VCC, , \TX|TxD_shift[0]~10_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\TX|TxD_shift [5]),
	.datac(\TX|always0~0_combout ),
	.datad(\GPin~combout [4]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\TX|TxD_shift[0]~10_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|TxD_shift [4]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|TxD_shift[4] .lut_mask = "fc0c";
defparam \TX|TxD_shift[4] .operation_mode = "normal";
defparam \TX|TxD_shift[4] .output_mode = "reg_only";
defparam \TX|TxD_shift[4] .register_cascade_mode = "off";
defparam \TX|TxD_shift[4] .sum_lutc_input = "datac";
defparam \TX|TxD_shift[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y5_N2
maxv_lcell \TX|TxD_shift[3] (
// Equation(s):
// \TX|TxD_shift [3] = DFFEAS((\TX|always0~0_combout  & (\GPin~combout [3])) # (!\TX|always0~0_combout  & (((\TX|TxD_shift [4])))), GLOBAL(\clk~combout ), VCC, , \TX|TxD_shift[0]~10_combout , , , , )

	.clk(\clk~combout ),
	.dataa(\GPin~combout [3]),
	.datab(\TX|TxD_shift [4]),
	.datac(\TX|always0~0_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\TX|TxD_shift[0]~10_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|TxD_shift [3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|TxD_shift[3] .lut_mask = "acac";
defparam \TX|TxD_shift[3] .operation_mode = "normal";
defparam \TX|TxD_shift[3] .output_mode = "reg_only";
defparam \TX|TxD_shift[3] .register_cascade_mode = "off";
defparam \TX|TxD_shift[3] .sum_lutc_input = "datac";
defparam \TX|TxD_shift[3] .synch_mode = "off";
// synopsys translate_on

// Location: PIN_96,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \GPin[2]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\GPin~combout [2]),
	.padio(GPin[2]));
// synopsys translate_off
defparam \GPin[2]~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X5_Y5_N1
maxv_lcell \TX|TxD_shift[2] (
// Equation(s):
// \TX|TxD_shift [2] = DFFEAS(((\TX|always0~0_combout  & ((\GPin~combout [2]))) # (!\TX|always0~0_combout  & (\TX|TxD_shift [3]))), GLOBAL(\clk~combout ), VCC, , \TX|TxD_shift[0]~10_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\TX|TxD_shift [3]),
	.datac(\TX|always0~0_combout ),
	.datad(\GPin~combout [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\TX|TxD_shift[0]~10_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|TxD_shift [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|TxD_shift[2] .lut_mask = "fc0c";
defparam \TX|TxD_shift[2] .operation_mode = "normal";
defparam \TX|TxD_shift[2] .output_mode = "reg_only";
defparam \TX|TxD_shift[2] .register_cascade_mode = "off";
defparam \TX|TxD_shift[2] .sum_lutc_input = "datac";
defparam \TX|TxD_shift[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y5_N8
maxv_lcell \TX|TxD_shift[1] (
// Equation(s):
// \TX|TxD_shift [1] = DFFEAS(((\TX|always0~0_combout  & (\GPin~combout [1])) # (!\TX|always0~0_combout  & ((\TX|TxD_shift [2])))), GLOBAL(\clk~combout ), VCC, , \TX|TxD_shift[0]~10_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\TX|always0~0_combout ),
	.datac(\GPin~combout [1]),
	.datad(\TX|TxD_shift [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\TX|TxD_shift[0]~10_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|TxD_shift [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|TxD_shift[1] .lut_mask = "f3c0";
defparam \TX|TxD_shift[1] .operation_mode = "normal";
defparam \TX|TxD_shift[1] .output_mode = "reg_only";
defparam \TX|TxD_shift[1] .register_cascade_mode = "off";
defparam \TX|TxD_shift[1] .sum_lutc_input = "datac";
defparam \TX|TxD_shift[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y5_N5
maxv_lcell \TX|TxD_shift[0] (
// Equation(s):
// \TX|TxD_shift [0] = DFFEAS(((\TX|always0~0_combout  & (\GPin~combout [0])) # (!\TX|always0~0_combout  & ((\TX|TxD_shift [1])))), GLOBAL(\clk~combout ), VCC, , \TX|TxD_shift[0]~10_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\TX|always0~0_combout ),
	.datac(\GPin~combout [0]),
	.datad(\TX|TxD_shift [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\TX|TxD_shift[0]~10_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\TX|TxD_shift [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|TxD_shift[0] .lut_mask = "f3c0";
defparam \TX|TxD_shift[0] .operation_mode = "normal";
defparam \TX|TxD_shift[0] .output_mode = "reg_only";
defparam \TX|TxD_shift[0] .register_cascade_mode = "off";
defparam \TX|TxD_shift[0] .sum_lutc_input = "datac";
defparam \TX|TxD_shift[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y6_N0
maxv_lcell \TX|TxD~0 (
// Equation(s):
// \TX|TxD~0_combout  = (\TX|TxD_state [3] & (\TX|TxD_shift [0])) # (!\TX|TxD_state [3] & (((!\TX|TxD_state [2]))))

	.clk(gnd),
	.dataa(\TX|TxD_shift [0]),
	.datab(\TX|TxD_state [2]),
	.datac(\TX|TxD_state [3]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\TX|TxD~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \TX|TxD~0 .lut_mask = "a3a3";
defparam \TX|TxD~0 .operation_mode = "normal";
defparam \TX|TxD~0 .output_mode = "comb_only";
defparam \TX|TxD~0 .register_cascade_mode = "off";
defparam \TX|TxD~0 .sum_lutc_input = "datac";
defparam \TX|TxD~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N9
maxv_lcell \RX|always4~0 (
// Equation(s):
// \RX|always4~0_combout  = ((\RX|sampleNow~0_combout  & (\RX|RxD_state [3])))

	.clk(gnd),
	.dataa(vcc),
	.datab(\RX|sampleNow~0_combout ),
	.datac(\RX|RxD_state [3]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\RX|always4~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|always4~0 .lut_mask = "c0c0";
defparam \RX|always4~0 .operation_mode = "normal";
defparam \RX|always4~0 .output_mode = "comb_only";
defparam \RX|always4~0 .register_cascade_mode = "off";
defparam \RX|always4~0 .sum_lutc_input = "datac";
defparam \RX|always4~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N3
maxv_lcell \RX|RxD_data[7] (
// Equation(s):
// \RX|RxD_data [7] = DFFEAS((((!\RX|RxD_bit~regout ))), GLOBAL(\clk~combout ), VCC, , \RX|always4~0_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\RX|RxD_bit~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\RX|always4~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|RxD_data [7]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|RxD_data[7] .lut_mask = "00ff";
defparam \RX|RxD_data[7] .operation_mode = "normal";
defparam \RX|RxD_data[7] .output_mode = "reg_only";
defparam \RX|RxD_data[7] .register_cascade_mode = "off";
defparam \RX|RxD_data[7] .sum_lutc_input = "datac";
defparam \RX|RxD_data[7] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N1
maxv_lcell \RX|RxD_data[6] (
// Equation(s):
// \RX|RxD_data [6] = DFFEAS((((\RX|RxD_data [7]))), GLOBAL(\clk~combout ), VCC, , \RX|always4~0_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\RX|RxD_data [7]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\RX|always4~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|RxD_data [6]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|RxD_data[6] .lut_mask = "ff00";
defparam \RX|RxD_data[6] .operation_mode = "normal";
defparam \RX|RxD_data[6] .output_mode = "reg_only";
defparam \RX|RxD_data[6] .register_cascade_mode = "off";
defparam \RX|RxD_data[6] .sum_lutc_input = "datac";
defparam \RX|RxD_data[6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N2
maxv_lcell \RX|RxD_data[5] (
// Equation(s):
// \RX|RxD_data [5] = DFFEAS((((\RX|RxD_data [6]))), GLOBAL(\clk~combout ), VCC, , \RX|always4~0_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\RX|RxD_data [6]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\RX|always4~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|RxD_data [5]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|RxD_data[5] .lut_mask = "ff00";
defparam \RX|RxD_data[5] .operation_mode = "normal";
defparam \RX|RxD_data[5] .output_mode = "reg_only";
defparam \RX|RxD_data[5] .register_cascade_mode = "off";
defparam \RX|RxD_data[5] .sum_lutc_input = "datac";
defparam \RX|RxD_data[5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N4
maxv_lcell \RX|RxD_data[4] (
// Equation(s):
// \RX|RxD_data [4] = DFFEAS((((\RX|RxD_data [5]))), GLOBAL(\clk~combout ), VCC, , \RX|always4~0_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\RX|RxD_data [5]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\RX|always4~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|RxD_data [4]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|RxD_data[4] .lut_mask = "ff00";
defparam \RX|RxD_data[4] .operation_mode = "normal";
defparam \RX|RxD_data[4] .output_mode = "reg_only";
defparam \RX|RxD_data[4] .register_cascade_mode = "off";
defparam \RX|RxD_data[4] .sum_lutc_input = "datac";
defparam \RX|RxD_data[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N3
maxv_lcell \RX|RxD_data[3] (
// Equation(s):
// \RX|RxD_data [3] = DFFEAS((((\RX|RxD_data [4]))), GLOBAL(\clk~combout ), VCC, , \RX|always4~0_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\RX|RxD_data [4]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\RX|always4~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|RxD_data [3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|RxD_data[3] .lut_mask = "ff00";
defparam \RX|RxD_data[3] .operation_mode = "normal";
defparam \RX|RxD_data[3] .output_mode = "reg_only";
defparam \RX|RxD_data[3] .register_cascade_mode = "off";
defparam \RX|RxD_data[3] .sum_lutc_input = "datac";
defparam \RX|RxD_data[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N2
maxv_lcell \RX|RxD_data[2] (
// Equation(s):
// \RX|RxD_data [2] = DFFEAS((((\RX|RxD_data [3]))), GLOBAL(\clk~combout ), VCC, , \RX|always4~0_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\RX|RxD_data [3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\RX|always4~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|RxD_data [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|RxD_data[2] .lut_mask = "ff00";
defparam \RX|RxD_data[2] .operation_mode = "normal";
defparam \RX|RxD_data[2] .output_mode = "reg_only";
defparam \RX|RxD_data[2] .register_cascade_mode = "off";
defparam \RX|RxD_data[2] .sum_lutc_input = "datac";
defparam \RX|RxD_data[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N1
maxv_lcell \RX|RxD_data[1] (
// Equation(s):
// \RX|RxD_data [1] = DFFEAS((((\RX|RxD_data [2]))), GLOBAL(\clk~combout ), VCC, , \RX|always4~0_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\RX|RxD_data [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\RX|always4~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|RxD_data [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|RxD_data[1] .lut_mask = "ff00";
defparam \RX|RxD_data[1] .operation_mode = "normal";
defparam \RX|RxD_data[1] .output_mode = "reg_only";
defparam \RX|RxD_data[1] .register_cascade_mode = "off";
defparam \RX|RxD_data[1] .sum_lutc_input = "datac";
defparam \RX|RxD_data[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N9
maxv_lcell \RX|RxD_data[0] (
// Equation(s):
// \RX|RxD_data [0] = DFFEAS((((\RX|RxD_data [1]))), GLOBAL(\clk~combout ), VCC, , \RX|always4~0_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\RX|RxD_data [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\RX|always4~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\RX|RxD_data [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \RX|RxD_data[0] .lut_mask = "ff00";
defparam \RX|RxD_data[0] .operation_mode = "normal";
defparam \RX|RxD_data[0] .output_mode = "reg_only";
defparam \RX|RxD_data[0] .register_cascade_mode = "off";
defparam \RX|RxD_data[0] .sum_lutc_input = "datac";
defparam \RX|RxD_data[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N8
maxv_lcell \GPout[0]~reg0 (
// Equation(s):
// \GPout[0]~reg0_regout  = DFFEAS((((\RX|RxD_data [0]))), GLOBAL(\clk~combout ), VCC, , \RX|RxD_data_ready~regout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\RX|RxD_data [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\RX|RxD_data_ready~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\GPout[0]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \GPout[0]~reg0 .lut_mask = "ff00";
defparam \GPout[0]~reg0 .operation_mode = "normal";
defparam \GPout[0]~reg0 .output_mode = "reg_only";
defparam \GPout[0]~reg0 .register_cascade_mode = "off";
defparam \GPout[0]~reg0 .sum_lutc_input = "datac";
defparam \GPout[0]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N5
maxv_lcell \GPout[1]~reg0 (
// Equation(s):
// \GPout[1]~reg0_regout  = DFFEAS((((\RX|RxD_data [1]))), GLOBAL(\clk~combout ), VCC, , \RX|RxD_data_ready~regout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\RX|RxD_data [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\RX|RxD_data_ready~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\GPout[1]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \GPout[1]~reg0 .lut_mask = "ff00";
defparam \GPout[1]~reg0 .operation_mode = "normal";
defparam \GPout[1]~reg0 .output_mode = "reg_only";
defparam \GPout[1]~reg0 .register_cascade_mode = "off";
defparam \GPout[1]~reg0 .sum_lutc_input = "datac";
defparam \GPout[1]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N6
maxv_lcell \GPout[2]~reg0 (
// Equation(s):
// \GPout[2]~reg0_regout  = DFFEAS((((\RX|RxD_data [2]))), GLOBAL(\clk~combout ), VCC, , \RX|RxD_data_ready~regout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\RX|RxD_data [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\RX|RxD_data_ready~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\GPout[2]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \GPout[2]~reg0 .lut_mask = "ff00";
defparam \GPout[2]~reg0 .operation_mode = "normal";
defparam \GPout[2]~reg0 .output_mode = "reg_only";
defparam \GPout[2]~reg0 .register_cascade_mode = "off";
defparam \GPout[2]~reg0 .sum_lutc_input = "datac";
defparam \GPout[2]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N7
maxv_lcell \GPout[3]~reg0 (
// Equation(s):
// \GPout[3]~reg0_regout  = DFFEAS((((\RX|RxD_data [3]))), GLOBAL(\clk~combout ), VCC, , \RX|RxD_data_ready~regout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\RX|RxD_data [3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\RX|RxD_data_ready~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\GPout[3]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \GPout[3]~reg0 .lut_mask = "ff00";
defparam \GPout[3]~reg0 .operation_mode = "normal";
defparam \GPout[3]~reg0 .output_mode = "reg_only";
defparam \GPout[3]~reg0 .register_cascade_mode = "off";
defparam \GPout[3]~reg0 .sum_lutc_input = "datac";
defparam \GPout[3]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N5
maxv_lcell \GPout[4]~reg0 (
// Equation(s):
// \GPout[4]~reg0_regout  = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , \RX|RxD_data_ready~regout , \RX|RxD_data [4], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\RX|RxD_data [4]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\RX|RxD_data_ready~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\GPout[4]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \GPout[4]~reg0 .lut_mask = "0000";
defparam \GPout[4]~reg0 .operation_mode = "normal";
defparam \GPout[4]~reg0 .output_mode = "reg_only";
defparam \GPout[4]~reg0 .register_cascade_mode = "off";
defparam \GPout[4]~reg0 .sum_lutc_input = "datac";
defparam \GPout[4]~reg0 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y4_N8
maxv_lcell \GPout[5]~reg0 (
// Equation(s):
// \GPout[5]~reg0_regout  = DFFEAS((((\RX|RxD_data [5]))), GLOBAL(\clk~combout ), VCC, , \RX|RxD_data_ready~regout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\RX|RxD_data [5]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\RX|RxD_data_ready~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\GPout[5]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \GPout[5]~reg0 .lut_mask = "ff00";
defparam \GPout[5]~reg0 .operation_mode = "normal";
defparam \GPout[5]~reg0 .output_mode = "reg_only";
defparam \GPout[5]~reg0 .register_cascade_mode = "off";
defparam \GPout[5]~reg0 .sum_lutc_input = "datac";
defparam \GPout[5]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N7
maxv_lcell \GPout[6]~reg0 (
// Equation(s):
// \GPout[6]~reg0_regout  = DFFEAS((((\RX|RxD_data [6]))), GLOBAL(\clk~combout ), VCC, , \RX|RxD_data_ready~regout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\RX|RxD_data [6]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\RX|RxD_data_ready~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\GPout[6]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \GPout[6]~reg0 .lut_mask = "ff00";
defparam \GPout[6]~reg0 .operation_mode = "normal";
defparam \GPout[6]~reg0 .output_mode = "reg_only";
defparam \GPout[6]~reg0 .register_cascade_mode = "off";
defparam \GPout[6]~reg0 .sum_lutc_input = "datac";
defparam \GPout[6]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N6
maxv_lcell \GPout[7]~reg0 (
// Equation(s):
// \GPout[7]~reg0_regout  = DFFEAS((((\RX|RxD_data [7]))), GLOBAL(\clk~combout ), VCC, , \RX|RxD_data_ready~regout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\RX|RxD_data [7]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\RX|RxD_data_ready~regout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\GPout[7]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \GPout[7]~reg0 .lut_mask = "ff00";
defparam \GPout[7]~reg0 .operation_mode = "normal";
defparam \GPout[7]~reg0 .output_mode = "reg_only";
defparam \GPout[7]~reg0 .register_cascade_mode = "off";
defparam \GPout[7]~reg0 .sum_lutc_input = "datac";
defparam \GPout[7]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y6_N5
maxv_lcell \Add0~100 (
// Equation(s):
// \Add0~100_combout  = (led_count[21] $ ((\Add0~117 )))
// \Add0~102  = CARRY(((!\Add0~117 ) # (!led_count[21])))
// \Add0~102COUT1_177  = CARRY(((!\Add0~117 ) # (!led_count[21])))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[21]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~117 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~100_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~102 ),
	.cout1(\Add0~102COUT1_177 ));
// synopsys translate_off
defparam \Add0~100 .cin_used = "true";
defparam \Add0~100 .lut_mask = "3c3f";
defparam \Add0~100 .operation_mode = "arithmetic";
defparam \Add0~100 .output_mode = "comb_only";
defparam \Add0~100 .register_cascade_mode = "off";
defparam \Add0~100 .sum_lutc_input = "cin";
defparam \Add0~100 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y5_N0
maxv_lcell \led_count[21] (
// Equation(s):
// led_count[21] = DFFEAS(((\Add0~100_combout  & ((!\Equal1~10_combout )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\Add0~100_combout ),
	.datac(vcc),
	.datad(\Equal1~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[21]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[21] .lut_mask = "00cc";
defparam \led_count[21] .operation_mode = "normal";
defparam \led_count[21] .output_mode = "reg_only";
defparam \led_count[21] .register_cascade_mode = "off";
defparam \led_count[21] .sum_lutc_input = "datac";
defparam \led_count[21] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y6_N6
maxv_lcell \Add0~105 (
// Equation(s):
// \Add0~105_combout  = (led_count[22] $ ((!(!\Add0~117  & \Add0~102 ) # (\Add0~117  & \Add0~102COUT1_177 ))))
// \Add0~107  = CARRY(((led_count[22] & !\Add0~102 )))
// \Add0~107COUT1_178  = CARRY(((led_count[22] & !\Add0~102COUT1_177 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[22]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~117 ),
	.cin0(\Add0~102 ),
	.cin1(\Add0~102COUT1_177 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~105_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~107 ),
	.cout1(\Add0~107COUT1_178 ));
// synopsys translate_off
defparam \Add0~105 .cin0_used = "true";
defparam \Add0~105 .cin1_used = "true";
defparam \Add0~105 .cin_used = "true";
defparam \Add0~105 .lut_mask = "c30c";
defparam \Add0~105 .operation_mode = "arithmetic";
defparam \Add0~105 .output_mode = "comb_only";
defparam \Add0~105 .register_cascade_mode = "off";
defparam \Add0~105 .sum_lutc_input = "cin";
defparam \Add0~105 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N4
maxv_lcell \led_count[22] (
// Equation(s):
// led_count[22] = DFFEAS((((\Add0~105_combout  & !\Equal1~10_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add0~105_combout ),
	.datad(\Equal1~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[22]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[22] .lut_mask = "00f0";
defparam \led_count[22] .operation_mode = "normal";
defparam \led_count[22] .output_mode = "reg_only";
defparam \led_count[22] .register_cascade_mode = "off";
defparam \led_count[22] .sum_lutc_input = "datac";
defparam \led_count[22] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y6_N7
maxv_lcell \Add0~110 (
// Equation(s):
// \Add0~110_combout  = led_count[23] $ (((((!\Add0~117  & \Add0~107 ) # (\Add0~117  & \Add0~107COUT1_178 )))))
// \Add0~112  = CARRY(((!\Add0~107 )) # (!led_count[23]))
// \Add0~112COUT1_179  = CARRY(((!\Add0~107COUT1_178 )) # (!led_count[23]))

	.clk(gnd),
	.dataa(led_count[23]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~117 ),
	.cin0(\Add0~107 ),
	.cin1(\Add0~107COUT1_178 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~110_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~112 ),
	.cout1(\Add0~112COUT1_179 ));
// synopsys translate_off
defparam \Add0~110 .cin0_used = "true";
defparam \Add0~110 .cin1_used = "true";
defparam \Add0~110 .cin_used = "true";
defparam \Add0~110 .lut_mask = "5a5f";
defparam \Add0~110 .operation_mode = "arithmetic";
defparam \Add0~110 .output_mode = "comb_only";
defparam \Add0~110 .register_cascade_mode = "off";
defparam \Add0~110 .sum_lutc_input = "cin";
defparam \Add0~110 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N6
maxv_lcell \led_count[23] (
// Equation(s):
// led_count[23] = DFFEAS((((\Add0~110_combout  & !\Equal1~10_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add0~110_combout ),
	.datad(\Equal1~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[23]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[23] .lut_mask = "00f0";
defparam \led_count[23] .operation_mode = "normal";
defparam \led_count[23] .output_mode = "reg_only";
defparam \led_count[23] .register_cascade_mode = "off";
defparam \led_count[23] .sum_lutc_input = "datac";
defparam \led_count[23] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y6_N4
maxv_lcell \Add0~5 (
// Equation(s):
// \Add0~5_combout  = ((!led_count[0]))
// \Add0~7  = CARRY(((led_count[0])))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[0]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~5_combout ),
	.regout(),
	.cout(\Add0~7 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add0~5 .lut_mask = "33cc";
defparam \Add0~5 .operation_mode = "arithmetic";
defparam \Add0~5 .output_mode = "comb_only";
defparam \Add0~5 .register_cascade_mode = "off";
defparam \Add0~5 .sum_lutc_input = "datac";
defparam \Add0~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y6_N2
maxv_lcell \led_count[0] (
// Equation(s):
// led_count[0] = DFFEAS((((\Add0~5_combout  & !\Equal1~10_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add0~5_combout ),
	.datad(\Equal1~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[0] .lut_mask = "00f0";
defparam \led_count[0] .operation_mode = "normal";
defparam \led_count[0] .output_mode = "reg_only";
defparam \led_count[0] .register_cascade_mode = "off";
defparam \led_count[0] .sum_lutc_input = "datac";
defparam \led_count[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y6_N0
maxv_lcell \Add0~20 (
// Equation(s):
// \Add0~20_combout  = (led_count[6] $ ((!\Add0~37 )))
// \Add0~22  = CARRY(((led_count[6] & !\Add0~37 )))
// \Add0~22COUT1_165  = CARRY(((led_count[6] & !\Add0~37 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[6]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~37 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~20_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~22 ),
	.cout1(\Add0~22COUT1_165 ));
// synopsys translate_off
defparam \Add0~20 .cin_used = "true";
defparam \Add0~20 .lut_mask = "c30c";
defparam \Add0~20 .operation_mode = "arithmetic";
defparam \Add0~20 .output_mode = "comb_only";
defparam \Add0~20 .register_cascade_mode = "off";
defparam \Add0~20 .sum_lutc_input = "cin";
defparam \Add0~20 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y7_N4
maxv_lcell \led_count[6] (
// Equation(s):
// led_count[6] = DFFEAS((!\Equal1~10_combout  & (((\Add0~20_combout )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\Equal1~10_combout ),
	.datab(vcc),
	.datac(\Add0~20_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[6]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[6] .lut_mask = "5050";
defparam \led_count[6] .operation_mode = "normal";
defparam \led_count[6] .output_mode = "reg_only";
defparam \led_count[6] .register_cascade_mode = "off";
defparam \led_count[6] .sum_lutc_input = "datac";
defparam \led_count[6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y6_N1
maxv_lcell \Add0~25 (
// Equation(s):
// \Add0~25_combout  = led_count[7] $ (((((!\Add0~37  & \Add0~22 ) # (\Add0~37  & \Add0~22COUT1_165 )))))
// \Add0~27  = CARRY(((!\Add0~22 )) # (!led_count[7]))
// \Add0~27COUT1_166  = CARRY(((!\Add0~22COUT1_165 )) # (!led_count[7]))

	.clk(gnd),
	.dataa(led_count[7]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~37 ),
	.cin0(\Add0~22 ),
	.cin1(\Add0~22COUT1_165 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~25_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~27 ),
	.cout1(\Add0~27COUT1_166 ));
// synopsys translate_off
defparam \Add0~25 .cin0_used = "true";
defparam \Add0~25 .cin1_used = "true";
defparam \Add0~25 .cin_used = "true";
defparam \Add0~25 .lut_mask = "5a5f";
defparam \Add0~25 .operation_mode = "arithmetic";
defparam \Add0~25 .output_mode = "comb_only";
defparam \Add0~25 .register_cascade_mode = "off";
defparam \Add0~25 .sum_lutc_input = "cin";
defparam \Add0~25 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y7_N5
maxv_lcell \led_count[7] (
// Equation(s):
// led_count[7] = DFFEAS(((\Add0~25_combout  & (!\Equal1~10_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\Add0~25_combout ),
	.datac(\Equal1~10_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[7]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[7] .lut_mask = "0c0c";
defparam \led_count[7] .operation_mode = "normal";
defparam \led_count[7] .output_mode = "reg_only";
defparam \led_count[7] .register_cascade_mode = "off";
defparam \led_count[7] .sum_lutc_input = "datac";
defparam \led_count[7] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y6_N5
maxv_lcell \Add0~0 (
// Equation(s):
// \Add0~0_combout  = (led_count[1] $ ((\Add0~7 )))
// \Add0~2  = CARRY(((!\Add0~7 ) # (!led_count[1])))
// \Add0~2COUT1_161  = CARRY(((!\Add0~7 ) # (!led_count[1])))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~7 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~0_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~2 ),
	.cout1(\Add0~2COUT1_161 ));
// synopsys translate_off
defparam \Add0~0 .cin_used = "true";
defparam \Add0~0 .lut_mask = "3c3f";
defparam \Add0~0 .operation_mode = "arithmetic";
defparam \Add0~0 .output_mode = "comb_only";
defparam \Add0~0 .register_cascade_mode = "off";
defparam \Add0~0 .sum_lutc_input = "cin";
defparam \Add0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y5_N4
maxv_lcell \led_count[1] (
// Equation(s):
// led_count[1] = DFFEAS(((\Add0~0_combout  & ((!\Equal1~10_combout )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\Add0~0_combout ),
	.datac(vcc),
	.datad(\Equal1~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[1] .lut_mask = "00cc";
defparam \led_count[1] .operation_mode = "normal";
defparam \led_count[1] .output_mode = "reg_only";
defparam \led_count[1] .register_cascade_mode = "off";
defparam \led_count[1] .sum_lutc_input = "datac";
defparam \led_count[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y6_N6
maxv_lcell \Add0~10 (
// Equation(s):
// \Add0~10_combout  = (led_count[2] $ ((!(!\Add0~7  & \Add0~2 ) # (\Add0~7  & \Add0~2COUT1_161 ))))
// \Add0~12  = CARRY(((led_count[2] & !\Add0~2 )))
// \Add0~12COUT1_162  = CARRY(((led_count[2] & !\Add0~2COUT1_161 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[2]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~7 ),
	.cin0(\Add0~2 ),
	.cin1(\Add0~2COUT1_161 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~10_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~12 ),
	.cout1(\Add0~12COUT1_162 ));
// synopsys translate_off
defparam \Add0~10 .cin0_used = "true";
defparam \Add0~10 .cin1_used = "true";
defparam \Add0~10 .cin_used = "true";
defparam \Add0~10 .lut_mask = "c30c";
defparam \Add0~10 .operation_mode = "arithmetic";
defparam \Add0~10 .output_mode = "comb_only";
defparam \Add0~10 .register_cascade_mode = "off";
defparam \Add0~10 .sum_lutc_input = "cin";
defparam \Add0~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y6_N0
maxv_lcell \led_count[2] (
// Equation(s):
// \Equal1~0  = (!led_count[3] & (!led_count[0] & (!led_count[2] & led_count[1])))
// led_count[2] = DFFEAS(\Equal1~0 , GLOBAL(\clk~combout ), VCC, , , \Add0~10_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(led_count[3]),
	.datab(led_count[0]),
	.datac(\Add0~10_combout ),
	.datad(led_count[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal1~0 ),
	.regout(led_count[2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[2] .lut_mask = "0100";
defparam \led_count[2] .operation_mode = "normal";
defparam \led_count[2] .output_mode = "reg_and_comb";
defparam \led_count[2] .register_cascade_mode = "off";
defparam \led_count[2] .sum_lutc_input = "qfbk";
defparam \led_count[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X8_Y6_N7
maxv_lcell \Add0~15 (
// Equation(s):
// \Add0~15_combout  = led_count[3] $ (((((!\Add0~7  & \Add0~12 ) # (\Add0~7  & \Add0~12COUT1_162 )))))
// \Add0~17  = CARRY(((!\Add0~12 )) # (!led_count[3]))
// \Add0~17COUT1_163  = CARRY(((!\Add0~12COUT1_162 )) # (!led_count[3]))

	.clk(gnd),
	.dataa(led_count[3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~7 ),
	.cin0(\Add0~12 ),
	.cin1(\Add0~12COUT1_162 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~15_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~17 ),
	.cout1(\Add0~17COUT1_163 ));
// synopsys translate_off
defparam \Add0~15 .cin0_used = "true";
defparam \Add0~15 .cin1_used = "true";
defparam \Add0~15 .cin_used = "true";
defparam \Add0~15 .lut_mask = "5a5f";
defparam \Add0~15 .operation_mode = "arithmetic";
defparam \Add0~15 .output_mode = "comb_only";
defparam \Add0~15 .register_cascade_mode = "off";
defparam \Add0~15 .sum_lutc_input = "cin";
defparam \Add0~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y5_N2
maxv_lcell \led_count[3] (
// Equation(s):
// led_count[3] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , , \Add0~15_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add0~15_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[3] .lut_mask = "0000";
defparam \led_count[3] .operation_mode = "normal";
defparam \led_count[3] .output_mode = "reg_only";
defparam \led_count[3] .register_cascade_mode = "off";
defparam \led_count[3] .sum_lutc_input = "datac";
defparam \led_count[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X8_Y6_N8
maxv_lcell \Add0~30 (
// Equation(s):
// \Add0~30_combout  = (led_count[4] $ ((!(!\Add0~7  & \Add0~17 ) # (\Add0~7  & \Add0~17COUT1_163 ))))
// \Add0~32  = CARRY(((led_count[4] & !\Add0~17 )))
// \Add0~32COUT1_164  = CARRY(((led_count[4] & !\Add0~17COUT1_163 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[4]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~7 ),
	.cin0(\Add0~17 ),
	.cin1(\Add0~17COUT1_163 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~30_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~32 ),
	.cout1(\Add0~32COUT1_164 ));
// synopsys translate_off
defparam \Add0~30 .cin0_used = "true";
defparam \Add0~30 .cin1_used = "true";
defparam \Add0~30 .cin_used = "true";
defparam \Add0~30 .lut_mask = "c30c";
defparam \Add0~30 .operation_mode = "arithmetic";
defparam \Add0~30 .output_mode = "comb_only";
defparam \Add0~30 .register_cascade_mode = "off";
defparam \Add0~30 .sum_lutc_input = "cin";
defparam \Add0~30 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y6_N1
maxv_lcell \led_count[4] (
// Equation(s):
// \Equal1~1  = (led_count[7] & (led_count[6] & (!led_count[4] & !led_count[5])))
// led_count[4] = DFFEAS(\Equal1~1 , GLOBAL(\clk~combout ), VCC, , , \Add0~30_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(led_count[7]),
	.datab(led_count[6]),
	.datac(\Add0~30_combout ),
	.datad(led_count[5]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal1~1 ),
	.regout(led_count[4]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[4] .lut_mask = "0008";
defparam \led_count[4] .operation_mode = "normal";
defparam \led_count[4] .output_mode = "reg_and_comb";
defparam \led_count[4] .register_cascade_mode = "off";
defparam \led_count[4] .sum_lutc_input = "qfbk";
defparam \led_count[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X8_Y6_N9
maxv_lcell \Add0~35 (
// Equation(s):
// \Add0~35_combout  = led_count[5] $ (((((!\Add0~7  & \Add0~32 ) # (\Add0~7  & \Add0~32COUT1_164 )))))
// \Add0~37  = CARRY(((!\Add0~32COUT1_164 )) # (!led_count[5]))

	.clk(gnd),
	.dataa(led_count[5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~7 ),
	.cin0(\Add0~32 ),
	.cin1(\Add0~32COUT1_164 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~35_combout ),
	.regout(),
	.cout(\Add0~37 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add0~35 .cin0_used = "true";
defparam \Add0~35 .cin1_used = "true";
defparam \Add0~35 .cin_used = "true";
defparam \Add0~35 .lut_mask = "5a5f";
defparam \Add0~35 .operation_mode = "arithmetic";
defparam \Add0~35 .output_mode = "comb_only";
defparam \Add0~35 .register_cascade_mode = "off";
defparam \Add0~35 .sum_lutc_input = "cin";
defparam \Add0~35 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y6_N3
maxv_lcell \led_count[5] (
// Equation(s):
// led_count[5] = DFFEAS((((\Add0~35_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0~35_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[5]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[5] .lut_mask = "ff00";
defparam \led_count[5] .operation_mode = "normal";
defparam \led_count[5] .output_mode = "reg_only";
defparam \led_count[5] .register_cascade_mode = "off";
defparam \led_count[5] .sum_lutc_input = "datac";
defparam \led_count[5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y6_N5
maxv_lcell \Add0~55 (
// Equation(s):
// \Add0~55_combout  = (led_count[11] $ ((\Add0~42 )))
// \Add0~57  = CARRY(((!\Add0~42 ) # (!led_count[11])))
// \Add0~57COUT1_169  = CARRY(((!\Add0~42 ) # (!led_count[11])))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[11]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~42 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~55_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~57 ),
	.cout1(\Add0~57COUT1_169 ));
// synopsys translate_off
defparam \Add0~55 .cin_used = "true";
defparam \Add0~55 .lut_mask = "3c3f";
defparam \Add0~55 .operation_mode = "arithmetic";
defparam \Add0~55 .output_mode = "comb_only";
defparam \Add0~55 .register_cascade_mode = "off";
defparam \Add0~55 .sum_lutc_input = "cin";
defparam \Add0~55 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y7_N7
maxv_lcell \led_count[11] (
// Equation(s):
// led_count[11] = DFFEAS((((\Add0~55_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0~55_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[11]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[11] .lut_mask = "ff00";
defparam \led_count[11] .operation_mode = "normal";
defparam \led_count[11] .output_mode = "reg_only";
defparam \led_count[11] .register_cascade_mode = "off";
defparam \led_count[11] .sum_lutc_input = "datac";
defparam \led_count[11] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y6_N2
maxv_lcell \Add0~45 (
// Equation(s):
// \Add0~45_combout  = (led_count[8] $ ((!(!\Add0~37  & \Add0~27 ) # (\Add0~37  & \Add0~27COUT1_166 ))))
// \Add0~47  = CARRY(((led_count[8] & !\Add0~27 )))
// \Add0~47COUT1_167  = CARRY(((led_count[8] & !\Add0~27COUT1_166 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[8]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~37 ),
	.cin0(\Add0~27 ),
	.cin1(\Add0~27COUT1_166 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~45_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~47 ),
	.cout1(\Add0~47COUT1_167 ));
// synopsys translate_off
defparam \Add0~45 .cin0_used = "true";
defparam \Add0~45 .cin1_used = "true";
defparam \Add0~45 .cin_used = "true";
defparam \Add0~45 .lut_mask = "c30c";
defparam \Add0~45 .operation_mode = "arithmetic";
defparam \Add0~45 .output_mode = "comb_only";
defparam \Add0~45 .register_cascade_mode = "off";
defparam \Add0~45 .sum_lutc_input = "cin";
defparam \Add0~45 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y7_N8
maxv_lcell \led_count[8] (
// Equation(s):
// \Equal1~2  = (led_count[10] & (!led_count[11] & (!led_count[8] & !led_count[9])))
// led_count[8] = DFFEAS(\Equal1~2 , GLOBAL(\clk~combout ), VCC, , , \Add0~45_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(led_count[10]),
	.datab(led_count[11]),
	.datac(\Add0~45_combout ),
	.datad(led_count[9]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal1~2 ),
	.regout(led_count[8]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[8] .lut_mask = "0002";
defparam \led_count[8] .operation_mode = "normal";
defparam \led_count[8] .output_mode = "reg_and_comb";
defparam \led_count[8] .register_cascade_mode = "off";
defparam \led_count[8] .sum_lutc_input = "qfbk";
defparam \led_count[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y6_N3
maxv_lcell \Add0~50 (
// Equation(s):
// \Add0~50_combout  = (led_count[9] $ (((!\Add0~37  & \Add0~47 ) # (\Add0~37  & \Add0~47COUT1_167 ))))
// \Add0~52  = CARRY(((!\Add0~47 ) # (!led_count[9])))
// \Add0~52COUT1_168  = CARRY(((!\Add0~47COUT1_167 ) # (!led_count[9])))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[9]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~37 ),
	.cin0(\Add0~47 ),
	.cin1(\Add0~47COUT1_167 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~50_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~52 ),
	.cout1(\Add0~52COUT1_168 ));
// synopsys translate_off
defparam \Add0~50 .cin0_used = "true";
defparam \Add0~50 .cin1_used = "true";
defparam \Add0~50 .cin_used = "true";
defparam \Add0~50 .lut_mask = "3c3f";
defparam \Add0~50 .operation_mode = "arithmetic";
defparam \Add0~50 .output_mode = "comb_only";
defparam \Add0~50 .register_cascade_mode = "off";
defparam \Add0~50 .sum_lutc_input = "cin";
defparam \Add0~50 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y7_N3
maxv_lcell \led_count[9] (
// Equation(s):
// led_count[9] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , , \Add0~50_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add0~50_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[9]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[9] .lut_mask = "0000";
defparam \led_count[9] .operation_mode = "normal";
defparam \led_count[9] .output_mode = "reg_only";
defparam \led_count[9] .register_cascade_mode = "off";
defparam \led_count[9] .sum_lutc_input = "datac";
defparam \led_count[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y6_N4
maxv_lcell \Add0~40 (
// Equation(s):
// \Add0~40_combout  = (led_count[10] $ ((!(!\Add0~37  & \Add0~52 ) # (\Add0~37  & \Add0~52COUT1_168 ))))
// \Add0~42  = CARRY(((led_count[10] & !\Add0~52COUT1_168 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[10]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~37 ),
	.cin0(\Add0~52 ),
	.cin1(\Add0~52COUT1_168 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~40_combout ),
	.regout(),
	.cout(\Add0~42 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add0~40 .cin0_used = "true";
defparam \Add0~40 .cin1_used = "true";
defparam \Add0~40 .cin_used = "true";
defparam \Add0~40 .lut_mask = "c30c";
defparam \Add0~40 .operation_mode = "arithmetic";
defparam \Add0~40 .output_mode = "comb_only";
defparam \Add0~40 .register_cascade_mode = "off";
defparam \Add0~40 .sum_lutc_input = "cin";
defparam \Add0~40 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y7_N0
maxv_lcell \led_count[10] (
// Equation(s):
// led_count[10] = DFFEAS((((\Add0~40_combout  & !\Equal1~10_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add0~40_combout ),
	.datad(\Equal1~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[10]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[10] .lut_mask = "00f0";
defparam \led_count[10] .operation_mode = "normal";
defparam \led_count[10] .output_mode = "reg_only";
defparam \led_count[10] .register_cascade_mode = "off";
defparam \led_count[10] .sum_lutc_input = "datac";
defparam \led_count[10] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y6_N6
maxv_lcell \Add0~60 (
// Equation(s):
// \Add0~60_combout  = (led_count[12] $ ((!(!\Add0~42  & \Add0~57 ) # (\Add0~42  & \Add0~57COUT1_169 ))))
// \Add0~62  = CARRY(((led_count[12] & !\Add0~57 )))
// \Add0~62COUT1_170  = CARRY(((led_count[12] & !\Add0~57COUT1_169 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[12]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~42 ),
	.cin0(\Add0~57 ),
	.cin1(\Add0~57COUT1_169 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~60_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~62 ),
	.cout1(\Add0~62COUT1_170 ));
// synopsys translate_off
defparam \Add0~60 .cin0_used = "true";
defparam \Add0~60 .cin1_used = "true";
defparam \Add0~60 .cin_used = "true";
defparam \Add0~60 .lut_mask = "c30c";
defparam \Add0~60 .operation_mode = "arithmetic";
defparam \Add0~60 .output_mode = "comb_only";
defparam \Add0~60 .register_cascade_mode = "off";
defparam \Add0~60 .sum_lutc_input = "cin";
defparam \Add0~60 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y7_N9
maxv_lcell \led_count[12] (
// Equation(s):
// led_count[12] = DFFEAS(((!\Equal1~10_combout  & (\Add0~60_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\Equal1~10_combout ),
	.datac(\Add0~60_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[12]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[12] .lut_mask = "3030";
defparam \led_count[12] .operation_mode = "normal";
defparam \led_count[12] .output_mode = "reg_only";
defparam \led_count[12] .register_cascade_mode = "off";
defparam \led_count[12] .sum_lutc_input = "datac";
defparam \led_count[12] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y6_N7
maxv_lcell \Add0~65 (
// Equation(s):
// \Add0~65_combout  = led_count[13] $ (((((!\Add0~42  & \Add0~62 ) # (\Add0~42  & \Add0~62COUT1_170 )))))
// \Add0~67  = CARRY(((!\Add0~62 )) # (!led_count[13]))
// \Add0~67COUT1_171  = CARRY(((!\Add0~62COUT1_170 )) # (!led_count[13]))

	.clk(gnd),
	.dataa(led_count[13]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~42 ),
	.cin0(\Add0~62 ),
	.cin1(\Add0~62COUT1_170 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~65_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~67 ),
	.cout1(\Add0~67COUT1_171 ));
// synopsys translate_off
defparam \Add0~65 .cin0_used = "true";
defparam \Add0~65 .cin1_used = "true";
defparam \Add0~65 .cin_used = "true";
defparam \Add0~65 .lut_mask = "5a5f";
defparam \Add0~65 .operation_mode = "arithmetic";
defparam \Add0~65 .output_mode = "comb_only";
defparam \Add0~65 .register_cascade_mode = "off";
defparam \Add0~65 .sum_lutc_input = "cin";
defparam \Add0~65 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y7_N4
maxv_lcell \led_count[13] (
// Equation(s):
// \Equal1~3  = (!led_count[15] & (!led_count[14] & (!led_count[13] & led_count[12])))
// led_count[13] = DFFEAS(\Equal1~3 , GLOBAL(\clk~combout ), VCC, , , \Add0~65_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(led_count[15]),
	.datab(led_count[14]),
	.datac(\Add0~65_combout ),
	.datad(led_count[12]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal1~3 ),
	.regout(led_count[13]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[13] .lut_mask = "0100";
defparam \led_count[13] .operation_mode = "normal";
defparam \led_count[13] .output_mode = "reg_and_comb";
defparam \led_count[13] .register_cascade_mode = "off";
defparam \led_count[13] .sum_lutc_input = "qfbk";
defparam \led_count[13] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y6_N8
maxv_lcell \Add0~70 (
// Equation(s):
// \Add0~70_combout  = (led_count[14] $ ((!(!\Add0~42  & \Add0~67 ) # (\Add0~42  & \Add0~67COUT1_171 ))))
// \Add0~72  = CARRY(((led_count[14] & !\Add0~67 )))
// \Add0~72COUT1_172  = CARRY(((led_count[14] & !\Add0~67COUT1_171 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[14]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~42 ),
	.cin0(\Add0~67 ),
	.cin1(\Add0~67COUT1_171 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~70_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~72 ),
	.cout1(\Add0~72COUT1_172 ));
// synopsys translate_off
defparam \Add0~70 .cin0_used = "true";
defparam \Add0~70 .cin1_used = "true";
defparam \Add0~70 .cin_used = "true";
defparam \Add0~70 .lut_mask = "c30c";
defparam \Add0~70 .operation_mode = "arithmetic";
defparam \Add0~70 .output_mode = "comb_only";
defparam \Add0~70 .register_cascade_mode = "off";
defparam \Add0~70 .sum_lutc_input = "cin";
defparam \Add0~70 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y7_N5
maxv_lcell \led_count[14] (
// Equation(s):
// led_count[14] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , , \Add0~70_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add0~70_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[14]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[14] .lut_mask = "0000";
defparam \led_count[14] .operation_mode = "normal";
defparam \led_count[14] .output_mode = "reg_only";
defparam \led_count[14] .register_cascade_mode = "off";
defparam \led_count[14] .sum_lutc_input = "datac";
defparam \led_count[14] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y6_N9
maxv_lcell \Add0~75 (
// Equation(s):
// \Add0~75_combout  = (led_count[15] $ (((!\Add0~42  & \Add0~72 ) # (\Add0~42  & \Add0~72COUT1_172 ))))
// \Add0~77  = CARRY(((!\Add0~72COUT1_172 ) # (!led_count[15])))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[15]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~42 ),
	.cin0(\Add0~72 ),
	.cin1(\Add0~72COUT1_172 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~75_combout ),
	.regout(),
	.cout(\Add0~77 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add0~75 .cin0_used = "true";
defparam \Add0~75 .cin1_used = "true";
defparam \Add0~75 .cin_used = "true";
defparam \Add0~75 .lut_mask = "3c3f";
defparam \Add0~75 .operation_mode = "arithmetic";
defparam \Add0~75 .output_mode = "comb_only";
defparam \Add0~75 .register_cascade_mode = "off";
defparam \Add0~75 .sum_lutc_input = "cin";
defparam \Add0~75 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y7_N6
maxv_lcell \led_count[15] (
// Equation(s):
// led_count[15] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , , \Add0~75_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add0~75_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[15]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[15] .lut_mask = "0000";
defparam \led_count[15] .operation_mode = "normal";
defparam \led_count[15] .output_mode = "reg_only";
defparam \led_count[15] .register_cascade_mode = "off";
defparam \led_count[15] .sum_lutc_input = "datac";
defparam \led_count[15] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X10_Y6_N0
maxv_lcell \Add0~80 (
// Equation(s):
// \Add0~80_combout  = (led_count[16] $ ((!\Add0~77 )))
// \Add0~82  = CARRY(((led_count[16] & !\Add0~77 )))
// \Add0~82COUT1_173  = CARRY(((led_count[16] & !\Add0~77 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[16]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~77 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~80_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~82 ),
	.cout1(\Add0~82COUT1_173 ));
// synopsys translate_off
defparam \Add0~80 .cin_used = "true";
defparam \Add0~80 .lut_mask = "c30c";
defparam \Add0~80 .operation_mode = "arithmetic";
defparam \Add0~80 .output_mode = "comb_only";
defparam \Add0~80 .register_cascade_mode = "off";
defparam \Add0~80 .sum_lutc_input = "cin";
defparam \Add0~80 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N3
maxv_lcell \led_count[16] (
// Equation(s):
// led_count[16] = DFFEAS((((\Add0~80_combout  & !\Equal1~10_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add0~80_combout ),
	.datad(\Equal1~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[16]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[16] .lut_mask = "00f0";
defparam \led_count[16] .operation_mode = "normal";
defparam \led_count[16] .output_mode = "reg_only";
defparam \led_count[16] .register_cascade_mode = "off";
defparam \led_count[16] .sum_lutc_input = "datac";
defparam \led_count[16] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y6_N1
maxv_lcell \Add0~85 (
// Equation(s):
// \Add0~85_combout  = (led_count[17] $ (((!\Add0~77  & \Add0~82 ) # (\Add0~77  & \Add0~82COUT1_173 ))))
// \Add0~87  = CARRY(((!\Add0~82 ) # (!led_count[17])))
// \Add0~87COUT1_174  = CARRY(((!\Add0~82COUT1_173 ) # (!led_count[17])))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[17]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~77 ),
	.cin0(\Add0~82 ),
	.cin1(\Add0~82COUT1_173 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~85_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~87 ),
	.cout1(\Add0~87COUT1_174 ));
// synopsys translate_off
defparam \Add0~85 .cin0_used = "true";
defparam \Add0~85 .cin1_used = "true";
defparam \Add0~85 .cin_used = "true";
defparam \Add0~85 .lut_mask = "3c3f";
defparam \Add0~85 .operation_mode = "arithmetic";
defparam \Add0~85 .output_mode = "comb_only";
defparam \Add0~85 .register_cascade_mode = "off";
defparam \Add0~85 .sum_lutc_input = "cin";
defparam \Add0~85 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N7
maxv_lcell \led_count[17] (
// Equation(s):
// led_count[17] = DFFEAS(((\Add0~85_combout  & ((!\Equal1~10_combout )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\Add0~85_combout ),
	.datac(vcc),
	.datad(\Equal1~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[17]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[17] .lut_mask = "00cc";
defparam \led_count[17] .operation_mode = "normal";
defparam \led_count[17] .output_mode = "reg_only";
defparam \led_count[17] .register_cascade_mode = "off";
defparam \led_count[17] .sum_lutc_input = "datac";
defparam \led_count[17] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y6_N2
maxv_lcell \Add0~90 (
// Equation(s):
// \Add0~90_combout  = (led_count[18] $ ((!(!\Add0~77  & \Add0~87 ) # (\Add0~77  & \Add0~87COUT1_174 ))))
// \Add0~92  = CARRY(((led_count[18] & !\Add0~87 )))
// \Add0~92COUT1_175  = CARRY(((led_count[18] & !\Add0~87COUT1_174 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[18]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~77 ),
	.cin0(\Add0~87 ),
	.cin1(\Add0~87COUT1_174 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~90_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~92 ),
	.cout1(\Add0~92COUT1_175 ));
// synopsys translate_off
defparam \Add0~90 .cin0_used = "true";
defparam \Add0~90 .cin1_used = "true";
defparam \Add0~90 .cin_used = "true";
defparam \Add0~90 .lut_mask = "c30c";
defparam \Add0~90 .operation_mode = "arithmetic";
defparam \Add0~90 .output_mode = "comb_only";
defparam \Add0~90 .register_cascade_mode = "off";
defparam \Add0~90 .sum_lutc_input = "cin";
defparam \Add0~90 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N0
maxv_lcell \led_count[18] (
// Equation(s):
// led_count[18] = DFFEAS((((\Add0~90_combout  & !\Equal1~10_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add0~90_combout ),
	.datad(\Equal1~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[18]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[18] .lut_mask = "00f0";
defparam \led_count[18] .operation_mode = "normal";
defparam \led_count[18] .output_mode = "reg_only";
defparam \led_count[18] .register_cascade_mode = "off";
defparam \led_count[18] .sum_lutc_input = "datac";
defparam \led_count[18] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y6_N3
maxv_lcell \Add0~95 (
// Equation(s):
// \Add0~95_combout  = (led_count[19] $ (((!\Add0~77  & \Add0~92 ) # (\Add0~77  & \Add0~92COUT1_175 ))))
// \Add0~97  = CARRY(((!\Add0~92 ) # (!led_count[19])))
// \Add0~97COUT1_176  = CARRY(((!\Add0~92COUT1_175 ) # (!led_count[19])))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[19]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~77 ),
	.cin0(\Add0~92 ),
	.cin1(\Add0~92COUT1_175 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~95_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~97 ),
	.cout1(\Add0~97COUT1_176 ));
// synopsys translate_off
defparam \Add0~95 .cin0_used = "true";
defparam \Add0~95 .cin1_used = "true";
defparam \Add0~95 .cin_used = "true";
defparam \Add0~95 .lut_mask = "3c3f";
defparam \Add0~95 .operation_mode = "arithmetic";
defparam \Add0~95 .output_mode = "comb_only";
defparam \Add0~95 .register_cascade_mode = "off";
defparam \Add0~95 .sum_lutc_input = "cin";
defparam \Add0~95 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N5
maxv_lcell \led_count[19] (
// Equation(s):
// led_count[19] = DFFEAS((((\Add0~95_combout  & !\Equal1~10_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add0~95_combout ),
	.datad(\Equal1~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[19]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[19] .lut_mask = "00f0";
defparam \led_count[19] .operation_mode = "normal";
defparam \led_count[19] .output_mode = "reg_only";
defparam \led_count[19] .register_cascade_mode = "off";
defparam \led_count[19] .sum_lutc_input = "datac";
defparam \led_count[19] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y6_N4
maxv_lcell \Add0~115 (
// Equation(s):
// \Add0~115_combout  = (led_count[20] $ ((!(!\Add0~77  & \Add0~97 ) # (\Add0~77  & \Add0~97COUT1_176 ))))
// \Add0~117  = CARRY(((led_count[20] & !\Add0~97COUT1_176 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[20]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~77 ),
	.cin0(\Add0~97 ),
	.cin1(\Add0~97COUT1_176 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~115_combout ),
	.regout(),
	.cout(\Add0~117 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add0~115 .cin0_used = "true";
defparam \Add0~115 .cin1_used = "true";
defparam \Add0~115 .cin_used = "true";
defparam \Add0~115 .lut_mask = "c30c";
defparam \Add0~115 .operation_mode = "arithmetic";
defparam \Add0~115 .output_mode = "comb_only";
defparam \Add0~115 .register_cascade_mode = "off";
defparam \Add0~115 .sum_lutc_input = "cin";
defparam \Add0~115 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N1
maxv_lcell \led_count[20] (
// Equation(s):
// \Equal1~6  = (led_count[23] & (led_count[21] & (!led_count[20] & led_count[22])))
// led_count[20] = DFFEAS(\Equal1~6 , GLOBAL(\clk~combout ), VCC, , , \Add0~115_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(led_count[23]),
	.datab(led_count[21]),
	.datac(\Add0~115_combout ),
	.datad(led_count[22]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal1~6 ),
	.regout(led_count[20]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[20] .lut_mask = "0800";
defparam \led_count[20] .operation_mode = "normal";
defparam \led_count[20] .output_mode = "reg_and_comb";
defparam \led_count[20] .register_cascade_mode = "off";
defparam \led_count[20] .sum_lutc_input = "qfbk";
defparam \led_count[20] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X10_Y6_N8
maxv_lcell \Add0~120 (
// Equation(s):
// \Add0~120_combout  = (led_count[24] $ ((!(!\Add0~117  & \Add0~112 ) # (\Add0~117  & \Add0~112COUT1_179 ))))
// \Add0~122  = CARRY(((led_count[24] & !\Add0~112 )))
// \Add0~122COUT1_180  = CARRY(((led_count[24] & !\Add0~112COUT1_179 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[24]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~117 ),
	.cin0(\Add0~112 ),
	.cin1(\Add0~112COUT1_179 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~120_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~122 ),
	.cout1(\Add0~122COUT1_180 ));
// synopsys translate_off
defparam \Add0~120 .cin0_used = "true";
defparam \Add0~120 .cin1_used = "true";
defparam \Add0~120 .cin_used = "true";
defparam \Add0~120 .lut_mask = "c30c";
defparam \Add0~120 .operation_mode = "arithmetic";
defparam \Add0~120 .output_mode = "comb_only";
defparam \Add0~120 .register_cascade_mode = "off";
defparam \Add0~120 .sum_lutc_input = "cin";
defparam \Add0~120 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y5_N4
maxv_lcell \led_count[24] (
// Equation(s):
// led_count[24] = DFFEAS((((\Add0~120_combout  & !\Equal1~10_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add0~120_combout ),
	.datad(\Equal1~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[24]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[24] .lut_mask = "00f0";
defparam \led_count[24] .operation_mode = "normal";
defparam \led_count[24] .output_mode = "reg_only";
defparam \led_count[24] .register_cascade_mode = "off";
defparam \led_count[24] .sum_lutc_input = "datac";
defparam \led_count[24] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y6_N9
maxv_lcell \Add0~125 (
// Equation(s):
// \Add0~125_combout  = (led_count[25] $ (((!\Add0~117  & \Add0~122 ) # (\Add0~117  & \Add0~122COUT1_180 ))))
// \Add0~127  = CARRY(((!\Add0~122COUT1_180 ) # (!led_count[25])))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[25]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~117 ),
	.cin0(\Add0~122 ),
	.cin1(\Add0~122COUT1_180 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~125_combout ),
	.regout(),
	.cout(\Add0~127 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add0~125 .cin0_used = "true";
defparam \Add0~125 .cin1_used = "true";
defparam \Add0~125 .cin_used = "true";
defparam \Add0~125 .lut_mask = "3c3f";
defparam \Add0~125 .operation_mode = "arithmetic";
defparam \Add0~125 .output_mode = "comb_only";
defparam \Add0~125 .register_cascade_mode = "off";
defparam \Add0~125 .sum_lutc_input = "cin";
defparam \Add0~125 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y5_N5
maxv_lcell \led_count[25] (
// Equation(s):
// led_count[25] = DFFEAS((((\Add0~125_combout  & !\Equal1~10_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add0~125_combout ),
	.datad(\Equal1~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[25]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[25] .lut_mask = "00f0";
defparam \led_count[25] .operation_mode = "normal";
defparam \led_count[25] .output_mode = "reg_only";
defparam \led_count[25] .register_cascade_mode = "off";
defparam \led_count[25] .sum_lutc_input = "datac";
defparam \led_count[25] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y6_N0
maxv_lcell \Add0~130 (
// Equation(s):
// \Add0~130_combout  = (led_count[26] $ ((!\Add0~127 )))
// \Add0~132  = CARRY(((led_count[26] & !\Add0~127 )))
// \Add0~132COUT1_181  = CARRY(((led_count[26] & !\Add0~127 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[26]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~127 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~130_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~132 ),
	.cout1(\Add0~132COUT1_181 ));
// synopsys translate_off
defparam \Add0~130 .cin_used = "true";
defparam \Add0~130 .lut_mask = "c30c";
defparam \Add0~130 .operation_mode = "arithmetic";
defparam \Add0~130 .output_mode = "comb_only";
defparam \Add0~130 .register_cascade_mode = "off";
defparam \Add0~130 .sum_lutc_input = "cin";
defparam \Add0~130 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y6_N9
maxv_lcell \led_count[26] (
// Equation(s):
// \Equal1~8  = (!led_count[27] & (led_count[25] & (!led_count[26] & led_count[24])))
// led_count[26] = DFFEAS(\Equal1~8 , GLOBAL(\clk~combout ), VCC, , , \Add0~130_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(led_count[27]),
	.datab(led_count[25]),
	.datac(\Add0~130_combout ),
	.datad(led_count[24]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal1~8 ),
	.regout(led_count[26]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[26] .lut_mask = "0400";
defparam \led_count[26] .operation_mode = "normal";
defparam \led_count[26] .output_mode = "reg_and_comb";
defparam \led_count[26] .register_cascade_mode = "off";
defparam \led_count[26] .sum_lutc_input = "qfbk";
defparam \led_count[26] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y6_N1
maxv_lcell \Add0~135 (
// Equation(s):
// \Add0~135_combout  = led_count[27] $ (((((!\Add0~127  & \Add0~132 ) # (\Add0~127  & \Add0~132COUT1_181 )))))
// \Add0~137  = CARRY(((!\Add0~132 )) # (!led_count[27]))
// \Add0~137COUT1_182  = CARRY(((!\Add0~132COUT1_181 )) # (!led_count[27]))

	.clk(gnd),
	.dataa(led_count[27]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~127 ),
	.cin0(\Add0~132 ),
	.cin1(\Add0~132COUT1_181 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~135_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~137 ),
	.cout1(\Add0~137COUT1_182 ));
// synopsys translate_off
defparam \Add0~135 .cin0_used = "true";
defparam \Add0~135 .cin1_used = "true";
defparam \Add0~135 .cin_used = "true";
defparam \Add0~135 .lut_mask = "5a5f";
defparam \Add0~135 .operation_mode = "arithmetic";
defparam \Add0~135 .output_mode = "comb_only";
defparam \Add0~135 .register_cascade_mode = "off";
defparam \Add0~135 .sum_lutc_input = "cin";
defparam \Add0~135 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y6_N6
maxv_lcell \led_count[27] (
// Equation(s):
// led_count[27] = DFFEAS((((\Add0~135_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0~135_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[27]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[27] .lut_mask = "ff00";
defparam \led_count[27] .operation_mode = "normal";
defparam \led_count[27] .output_mode = "reg_only";
defparam \led_count[27] .register_cascade_mode = "off";
defparam \led_count[27] .sum_lutc_input = "datac";
defparam \led_count[27] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y6_N2
maxv_lcell \Add0~140 (
// Equation(s):
// \Add0~140_combout  = (led_count[28] $ ((!(!\Add0~127  & \Add0~137 ) # (\Add0~127  & \Add0~137COUT1_182 ))))
// \Add0~142  = CARRY(((led_count[28] & !\Add0~137 )))
// \Add0~142COUT1_183  = CARRY(((led_count[28] & !\Add0~137COUT1_182 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[28]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~127 ),
	.cin0(\Add0~137 ),
	.cin1(\Add0~137COUT1_182 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~140_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~142 ),
	.cout1(\Add0~142COUT1_183 ));
// synopsys translate_off
defparam \Add0~140 .cin0_used = "true";
defparam \Add0~140 .cin1_used = "true";
defparam \Add0~140 .cin_used = "true";
defparam \Add0~140 .lut_mask = "c30c";
defparam \Add0~140 .operation_mode = "arithmetic";
defparam \Add0~140 .output_mode = "comb_only";
defparam \Add0~140 .register_cascade_mode = "off";
defparam \Add0~140 .sum_lutc_input = "cin";
defparam \Add0~140 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y6_N7
maxv_lcell \led_count[28] (
// Equation(s):
// \Equal1~9  = (!led_count[31] & (!led_count[29] & (!led_count[28] & !led_count[30])))
// led_count[28] = DFFEAS(\Equal1~9 , GLOBAL(\clk~combout ), VCC, , , \Add0~140_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(led_count[31]),
	.datab(led_count[29]),
	.datac(\Add0~140_combout ),
	.datad(led_count[30]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal1~9 ),
	.regout(led_count[28]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[28] .lut_mask = "0001";
defparam \led_count[28] .operation_mode = "normal";
defparam \led_count[28] .output_mode = "reg_and_comb";
defparam \led_count[28] .register_cascade_mode = "off";
defparam \led_count[28] .sum_lutc_input = "qfbk";
defparam \led_count[28] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y6_N3
maxv_lcell \Add0~145 (
// Equation(s):
// \Add0~145_combout  = (led_count[29] $ (((!\Add0~127  & \Add0~142 ) # (\Add0~127  & \Add0~142COUT1_183 ))))
// \Add0~147  = CARRY(((!\Add0~142 ) # (!led_count[29])))
// \Add0~147COUT1_184  = CARRY(((!\Add0~142COUT1_183 ) # (!led_count[29])))

	.clk(gnd),
	.dataa(vcc),
	.datab(led_count[29]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~127 ),
	.cin0(\Add0~142 ),
	.cin1(\Add0~142COUT1_183 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~145_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~147 ),
	.cout1(\Add0~147COUT1_184 ));
// synopsys translate_off
defparam \Add0~145 .cin0_used = "true";
defparam \Add0~145 .cin1_used = "true";
defparam \Add0~145 .cin_used = "true";
defparam \Add0~145 .lut_mask = "3c3f";
defparam \Add0~145 .operation_mode = "arithmetic";
defparam \Add0~145 .output_mode = "comb_only";
defparam \Add0~145 .register_cascade_mode = "off";
defparam \Add0~145 .sum_lutc_input = "cin";
defparam \Add0~145 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y5_N2
maxv_lcell \led_count[29] (
// Equation(s):
// led_count[29] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , , \Add0~145_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add0~145_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[29]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[29] .lut_mask = "0000";
defparam \led_count[29] .operation_mode = "normal";
defparam \led_count[29] .output_mode = "reg_only";
defparam \led_count[29] .register_cascade_mode = "off";
defparam \led_count[29] .sum_lutc_input = "datac";
defparam \led_count[29] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y6_N4
maxv_lcell \Add0~150 (
// Equation(s):
// \Add0~150_combout  = led_count[30] $ ((((!(!\Add0~127  & \Add0~147 ) # (\Add0~127  & \Add0~147COUT1_184 )))))
// \Add0~152  = CARRY((led_count[30] & ((!\Add0~147COUT1_184 ))))

	.clk(gnd),
	.dataa(led_count[30]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~127 ),
	.cin0(\Add0~147 ),
	.cin1(\Add0~147COUT1_184 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~150_combout ),
	.regout(),
	.cout(\Add0~152 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add0~150 .cin0_used = "true";
defparam \Add0~150 .cin1_used = "true";
defparam \Add0~150 .cin_used = "true";
defparam \Add0~150 .lut_mask = "a50a";
defparam \Add0~150 .operation_mode = "arithmetic";
defparam \Add0~150 .output_mode = "comb_only";
defparam \Add0~150 .register_cascade_mode = "off";
defparam \Add0~150 .sum_lutc_input = "cin";
defparam \Add0~150 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y6_N8
maxv_lcell \led_count[30] (
// Equation(s):
// led_count[30] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , , \Add0~150_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add0~150_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[30]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[30] .lut_mask = "0000";
defparam \led_count[30] .operation_mode = "normal";
defparam \led_count[30] .output_mode = "reg_only";
defparam \led_count[30] .register_cascade_mode = "off";
defparam \led_count[30] .sum_lutc_input = "datac";
defparam \led_count[30] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y6_N5
maxv_lcell \Add0~155 (
// Equation(s):
// \Add0~155_combout  = led_count[31] $ ((((\Add0~152 ))))

	.clk(gnd),
	.dataa(led_count[31]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~152 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~155_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add0~155 .cin_used = "true";
defparam \Add0~155 .lut_mask = "5a5a";
defparam \Add0~155 .operation_mode = "normal";
defparam \Add0~155 .output_mode = "comb_only";
defparam \Add0~155 .register_cascade_mode = "off";
defparam \Add0~155 .sum_lutc_input = "cin";
defparam \Add0~155 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y5_N0
maxv_lcell \led_count[31] (
// Equation(s):
// led_count[31] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , , \Add0~155_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add0~155_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led_count[31]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led_count[31] .lut_mask = "0000";
defparam \led_count[31] .operation_mode = "normal";
defparam \led_count[31] .output_mode = "reg_only";
defparam \led_count[31] .register_cascade_mode = "off";
defparam \led_count[31] .sum_lutc_input = "datac";
defparam \led_count[31] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X8_Y7_N4
maxv_lcell \Equal1~4 (
// Equation(s):
// \Equal1~4_combout  = (\Equal1~3  & (\Equal1~0  & (\Equal1~1  & \Equal1~2 )))

	.clk(gnd),
	.dataa(\Equal1~3 ),
	.datab(\Equal1~0 ),
	.datac(\Equal1~1 ),
	.datad(\Equal1~2 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal1~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal1~4 .lut_mask = "8000";
defparam \Equal1~4 .operation_mode = "normal";
defparam \Equal1~4 .output_mode = "comb_only";
defparam \Equal1~4 .register_cascade_mode = "off";
defparam \Equal1~4 .sum_lutc_input = "datac";
defparam \Equal1~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N2
maxv_lcell \Equal1~5 (
// Equation(s):
// \Equal1~5_combout  = (((led_count[17] & led_count[16])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(led_count[17]),
	.datad(led_count[16]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal1~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal1~5 .lut_mask = "f000";
defparam \Equal1~5 .operation_mode = "normal";
defparam \Equal1~5 .output_mode = "comb_only";
defparam \Equal1~5 .register_cascade_mode = "off";
defparam \Equal1~5 .sum_lutc_input = "datac";
defparam \Equal1~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N8
maxv_lcell \Equal1~7 (
// Equation(s):
// \Equal1~7_combout  = (led_count[19] & (\Equal1~6  & (led_count[18] & \Equal1~5_combout )))

	.clk(gnd),
	.dataa(led_count[19]),
	.datab(\Equal1~6 ),
	.datac(led_count[18]),
	.datad(\Equal1~5_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal1~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal1~7 .lut_mask = "8000";
defparam \Equal1~7 .operation_mode = "normal";
defparam \Equal1~7 .output_mode = "comb_only";
defparam \Equal1~7 .register_cascade_mode = "off";
defparam \Equal1~7 .sum_lutc_input = "datac";
defparam \Equal1~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N9
maxv_lcell \Equal1~10 (
// Equation(s):
// \Equal1~10_combout  = (\Equal1~8  & (\Equal1~9  & (\Equal1~4_combout  & \Equal1~7_combout )))

	.clk(gnd),
	.dataa(\Equal1~8 ),
	.datab(\Equal1~9 ),
	.datac(\Equal1~4_combout ),
	.datad(\Equal1~7_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal1~10_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal1~10 .lut_mask = "8000";
defparam \Equal1~10 .operation_mode = "normal";
defparam \Equal1~10 .output_mode = "comb_only";
defparam \Equal1~10 .register_cascade_mode = "off";
defparam \Equal1~10 .sum_lutc_input = "datac";
defparam \Equal1~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y3_N2
maxv_lcell \LED[1]~reg0 (
// Equation(s):
// \LED[1]~reg0_regout  = DFFEAS((\Equal1~10_combout  & (\LED[0]~reg0_regout  $ ((\LED[1]~reg0_regout )))) # (!\Equal1~10_combout  & (((\LED[1]~reg0_regout  & \LED[3]~0_combout )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\LED[0]~reg0_regout ),
	.datab(\LED[1]~reg0_regout ),
	.datac(\LED[3]~0_combout ),
	.datad(\Equal1~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LED[1]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LED[1]~reg0 .lut_mask = "66c0";
defparam \LED[1]~reg0 .operation_mode = "normal";
defparam \LED[1]~reg0 .output_mode = "reg_only";
defparam \LED[1]~reg0 .register_cascade_mode = "off";
defparam \LED[1]~reg0 .sum_lutc_input = "datac";
defparam \LED[1]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y3_N4
maxv_lcell \Add1~0 (
// Equation(s):
// \Add1~0_combout  = (\LED[0]~reg0_regout  & (((\LED[1]~reg0_regout ))))

	.clk(gnd),
	.dataa(\LED[0]~reg0_regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\LED[1]~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add1~0 .lut_mask = "aa00";
defparam \Add1~0 .operation_mode = "normal";
defparam \Add1~0 .output_mode = "comb_only";
defparam \Add1~0 .register_cascade_mode = "off";
defparam \Add1~0 .sum_lutc_input = "datac";
defparam \Add1~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y3_N6
maxv_lcell \LED[2]~reg0 (
// Equation(s):
// \LED[2]~reg0_regout  = DFFEAS((\LED[2]~reg0_regout  & (((!\LED[3]~reg0_regout  & !\Equal1~10_combout )) # (!\Add1~0_combout ))) # (!\LED[2]~reg0_regout  & (((\Add1~0_combout  & \Equal1~10_combout )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\LED[2]~reg0_regout ),
	.datab(\LED[3]~reg0_regout ),
	.datac(\Add1~0_combout ),
	.datad(\Equal1~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LED[2]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LED[2]~reg0 .lut_mask = "5a2a";
defparam \LED[2]~reg0 .operation_mode = "normal";
defparam \LED[2]~reg0 .output_mode = "reg_only";
defparam \LED[2]~reg0 .register_cascade_mode = "off";
defparam \LED[2]~reg0 .sum_lutc_input = "datac";
defparam \LED[2]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y3_N9
maxv_lcell \LED[3]~reg0 (
// Equation(s):
// \LED[3]~reg0_regout  = DFFEAS((\LED[2]~reg0_regout  & ((\LED[3]~reg0_regout  & (!\Add1~0_combout )) # (!\LED[3]~reg0_regout  & (\Add1~0_combout  & \Equal1~10_combout )))) # (!\LED[2]~reg0_regout  & (\LED[3]~reg0_regout )), GLOBAL(\clk~combout ), VCC, , , 
// , , , )

	.clk(\clk~combout ),
	.dataa(\LED[2]~reg0_regout ),
	.datab(\LED[3]~reg0_regout ),
	.datac(\Add1~0_combout ),
	.datad(\Equal1~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LED[3]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LED[3]~reg0 .lut_mask = "6c4c";
defparam \LED[3]~reg0 .operation_mode = "normal";
defparam \LED[3]~reg0 .output_mode = "reg_only";
defparam \LED[3]~reg0 .register_cascade_mode = "off";
defparam \LED[3]~reg0 .sum_lutc_input = "datac";
defparam \LED[3]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y3_N5
maxv_lcell \LED[3]~0 (
// Equation(s):
// \LED[3]~0_combout  = (((!\LED[1]~reg0_regout ) # (!\LED[2]~reg0_regout )) # (!\LED[3]~reg0_regout )) # (!\LED[0]~reg0_regout )

	.clk(gnd),
	.dataa(\LED[0]~reg0_regout ),
	.datab(\LED[3]~reg0_regout ),
	.datac(\LED[2]~reg0_regout ),
	.datad(\LED[1]~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LED[3]~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LED[3]~0 .lut_mask = "7fff";
defparam \LED[3]~0 .operation_mode = "normal";
defparam \LED[3]~0 .output_mode = "comb_only";
defparam \LED[3]~0 .register_cascade_mode = "off";
defparam \LED[3]~0 .sum_lutc_input = "datac";
defparam \LED[3]~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y3_N8
maxv_lcell \LED[0]~reg0 (
// Equation(s):
// \LED[0]~reg0_regout  = DFFEAS((\LED[0]~reg0_regout  & (((\LED[3]~0_combout  & !\Equal1~10_combout )))) # (!\LED[0]~reg0_regout  & (((\Equal1~10_combout )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\LED[0]~reg0_regout ),
	.datab(vcc),
	.datac(\LED[3]~0_combout ),
	.datad(\Equal1~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LED[0]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LED[0]~reg0 .lut_mask = "55a0";
defparam \LED[0]~reg0 .operation_mode = "normal";
defparam \LED[0]~reg0 .output_mode = "reg_only";
defparam \LED[0]~reg0 .register_cascade_mode = "off";
defparam \LED[0]~reg0 .sum_lutc_input = "datac";
defparam \LED[0]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_81,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \TxD~I (
	.datain(\TX|TxD~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(TxD));
// synopsys translate_off
defparam \TxD~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_66,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \GPout[0]~I (
	.datain(\GPout[0]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(GPout[0]));
// synopsys translate_off
defparam \GPout[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_43,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \GPout[1]~I (
	.datain(\GPout[1]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(GPout[1]));
// synopsys translate_off
defparam \GPout[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_67,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \GPout[2]~I (
	.datain(\GPout[2]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(GPout[2]));
// synopsys translate_off
defparam \GPout[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_44,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \GPout[3]~I (
	.datain(\GPout[3]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(GPout[3]));
// synopsys translate_off
defparam \GPout[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_42,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \GPout[4]~I (
	.datain(\GPout[4]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(GPout[4]));
// synopsys translate_off
defparam \GPout[4]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_38,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \GPout[5]~I (
	.datain(\GPout[5]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(GPout[5]));
// synopsys translate_off
defparam \GPout[5]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_40,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \GPout[6]~I (
	.datain(\GPout[6]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(GPout[6]));
// synopsys translate_off
defparam \GPout[6]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_19,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \GPout[7]~I (
	.datain(\GPout[7]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(GPout[7]));
// synopsys translate_off
defparam \GPout[7]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_20,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \SW_USER_1~I (
	.datain(gnd),
	.oe(gnd),
	.combout(),
	.padio(SW_USER_1));
// synopsys translate_off
defparam \SW_USER_1~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_21,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \SW_USER_2~I (
	.datain(gnd),
	.oe(gnd),
	.combout(),
	.padio(SW_USER_2));
// synopsys translate_off
defparam \SW_USER_2~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_100,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \TR_DIR_1~I (
	.datain(vcc),
	.oe(vcc),
	.combout(),
	.padio(TR_DIR_1));
// synopsys translate_off
defparam \TR_DIR_1~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_86,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \TR_OE_1~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(TR_OE_1));
// synopsys translate_off
defparam \TR_OE_1~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_29,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \TR_DIR_2~I (
	.datain(vcc),
	.oe(vcc),
	.combout(),
	.padio(TR_DIR_2));
// synopsys translate_off
defparam \TR_DIR_2~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_28,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \TR_OE_2~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(TR_OE_2));
// synopsys translate_off
defparam \TR_OE_2~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_85,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \TR_DIR_3~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(TR_DIR_3));
// synopsys translate_off
defparam \TR_DIR_3~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_74,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \TR_OE_3~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(TR_OE_3));
// synopsys translate_off
defparam \TR_OE_3~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_54,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \LED[0]~I (
	.datain(\LED[0]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(LED[0]));
// synopsys translate_off
defparam \LED[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_53,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \LED[1]~I (
	.datain(\LED[1]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(LED[1]));
// synopsys translate_off
defparam \LED[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_52,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \LED[2]~I (
	.datain(\LED[2]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(LED[2]));
// synopsys translate_off
defparam \LED[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_51,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \LED[3]~I (
	.datain(\LED[3]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(LED[3]));
// synopsys translate_off
defparam \LED[3]~I .operation_mode = "output";
// synopsys translate_on

endmodule
